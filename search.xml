<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[批量更改文件内容和名称]]></title>
    <url>%2F2019%2F03%2F23%2Fpython%2F%E6%89%B9%E9%87%8F%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%2F</url>
    <content type="text"><![CDATA[背景作为一个测试，经常要造测试数据，大量的文件需要批量替换测试文件中的数据，一个一个更改太累，所以研究起怎么更改数据更快 遇到的问题 批量替换的源代码是网上借鉴来的，自己增加了循环可以替换多个字段。后来发现就像数据里面第一个update如果把后面的update条件弄没了一样，会替换失败，所以替换文字的’顺序’很重要。而且这东西是’区分大小写’的，怎么大小写忽略还没来得及研究。 开始把.py的文件和测试文件放在一起了，可是每次都运行失败，这才知道这东西运行起来’六亲不认’，连自己都得内容都一起改。要么设置的遍历目录不增加自己这个代码文件，要么在循环中增加个if的判断条件，我选择了前者。 网上代码和可能是linux来的，和windows里面的’斜线’方向不一致，所以获取文件目录后自己替换了一下，就能用了。或许我也应该根据系统种类’os.name’写个if,让这个代码在多系统都能使用，健壮一些。 换行符的问题也困扰了我很久，linux下是’\n—LR’,max下是’\r—CR’windows下是’\r\n—CRLF’。如果直接在循环中替换，整篇文件不换行（也可能是我的替换方式不对），后来发现在读取文件时’open()’后面加上newline=‘’的参数就好了。不带newline参数是根据系统类型’os.name’，python自己判断，带\r是CR，带\n是LF，带空字符串是保持源文件不变。 代码import os#遍历目录下所有文件，连自己都不放过，所以自己在文件夹内会出错fileDir = "C:/Users/Administrator/Desktop/PythonDemo/replace/sfs"#文件内容大小写敏感，是依次替换replace_list1 = [ #[oldvalue,newcalue] ["J","PY"], ["A","T"], ["V","H"], ["a","ON"]#, ]#文件名称大小写敏感，是依次替换replace_list2 = [ #[oldvalue,newcalue] ["2018-07-30","2019-01-02"], ["20180730","20190102"]#, ]#获取目录下所有文件目录+名称def listFiles(dirPath): fileList=[] for root,dirs,files in os.walk(dirPath): for fileObj in files: fileList.append(os.path.join(root,fileObj).replace("\\","/")) return fileList#替换内容def replace_content(): fileList = listFiles(fileDir) for fileObj in fileList: print (fileObj) f = open(fileObj,mode='r+',newline='')#newline=''表示不更改换行符 all_the_lines=f.readlines() f.seek(0) f.truncate() for line in all_the_lines: newline=line for rp in range(len(replace_list1)): newline=newline.replace(replace_list1[rp][0], replace_list1[rp][1]) f.write(newline) f.close()#替换名称def replace_filename(): fileList = listFiles(fileDir) for fileObj in fileList: newname = fileObj for rp2 in range(len(replace_list2)): newname=newname.replace(replace_list2[rp2][0], replace_list2[rp2][1]) os.rename(fileObj,newname) print (newname)#运行if __name__=='__main__': replace_content() replace_filename()]]></content>
      <categories>
        <category>敲码</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jmeter]]></title>
    <url>%2F2018%2F11%2F15%2FJemeter%2FJmeter%2F</url>
    <content type="text"><![CDATA[1 安装1.1 安装Java环境略 1.2 安装jmeter配置环境变量 JMETER_HOME新增‘C:\apache-jmeter-5.0’ CLASSPATH追加‘;%JMETER_HOME%\lib\ext\ApacheJMeter_core.jar; %JMETER_HOME%\lib\jorphan.jar; ‘ path追加‘;%JMETER_HOME%\bin’’ 2 简单的京东接口例子京东商品价格查询 http://p.3.cn/prices/mgets?skuIds=~~J_商品ID~~&amp;type=1 协议: http服务器: p.3.cn/prices路径: /mgets变量:1 skuIds2 type 3 录制3.1 BADBOY录制3.1.1 录制 3.1.2 导出 3.1.3 导入多了coockie manager,header manager,cach manager可以删除多余项 3.2 代理录制3.2.1 添加http代理服务器端口 8888选择目标控制器 3.2.2 在浏览器中设置相同代理地址3.2.3 开始录制4 数据驱动4.1 用户参数 4.2 文件驱动添加CSV 4.3 函数文件驱动$&#123;__CSVRead(C:\Users\51testing\Desktop\test\testdata.txt,0)&#125; 4.4 函数变量wdd000$&#123;__threadNum&#125; 其中${__threadNum} 是获取当前线程编号 随机 random 5 定时器5.1 固定时间 5.2 高斯随机时间 5.3 集合 Synchronizing Timer 6 检查点/断言6.1 响应文本 6. 相应代码 6. 断言持续时间(不大于) 6. 响应信息(区分大小写)OK 和 NotFound 6. 返回字节大小 7 集合登陆 模拟100个用户使用 10个账号进行登录测试 要求时间再 10S 内 验证登录是否成功 设置提交数据 的集合点人数为 50 设置检查点，验证提交数据的请求时间小于1.8S 7.1 线程组 7.2 登录数据wd0001 ,123456wd0002 ,123456wd0003 ,123456wd0004 ,123456wd0005 ,123456wd0006 ,123456wd0007 ,123456wd0008 ,123456wd0009 ,123456wd00010,123456 7.3 添加集合 7.4 判断登陆成功断言(不一定是登录提交信息的响应)) 7.5 持续时间断言 8 POST请求8.1 前提必要信息1 增加cocckie管理2 增加http信息头：增加参数Content-Type3 请求里增加bodydata信息头 测试接口 http://ws.webxml.com.cn/webservices/ChinaTVprogramWebService.asmx/getAreaString 8.2 不带参数接口内容POST /webservices/ChinaTVprogramWebService.asmx HTTP/1.1Host: ws.webxml.com.cnContent-Type: text/xml; charset=utf-8Content-Length: lengthSOAPAction: "http://WebXml.com.cn/getAreaString"&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt; &lt;soap:Body&gt; &lt;getAreaString xmlns="http://WebXml.com.cn/" /&gt; &lt;/soap:Body&gt;&lt;/soap:Envelope&gt; 添加服务请求 添加body 8.3 带参数接口内容POST /webservices/ChinaTVprogramWebService.asmx HTTP/1.1Host: ws.webxml.com.cnContent-Type: text/xml; charset=utf-8Content-Length: lengthSOAPAction: "http://WebXml.com.cn/getTVchannelString"&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt; &lt;soap:Body&gt; &lt;getTVchannelString xmlns="http://WebXml.com.cn/"&gt;+ &lt;theTVstationID&gt;int&lt;/theTVstationID&gt; &lt;/getTVchannelString&gt; &lt;/soap:Body&gt;&lt;/soap:Envelope&gt; 添加参数 8.4 例子 30人随机看电视频道 9 后置处理(.+) 贪婪正则(.+) 不贪婪 前括号从全文从前往后查找后括号从全文从后往前查找 9.1 验证(用百度搜索检查是否取到) 例子1 从news获得 title标签页的内容2 用百度首页进行搜索 step1 source step2 提取元素 step3 用于搜索 http带端口号 Yhttp不带端口号 Yhttps不带端口号 yhttps带端口号 X 10 连接数据库 测试计划 加载库 ·mysql-connector-java-5.1.7-bin· 添加 JDBC Connection Configuration 添加 JDBC Request 11 本地配置好脚本 另一台电脑启动service C:\apache-jmeter-5.0\binjmeter-server 配置jmeter.properties多ip用逗号’,’ 分割,]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>自动化</tag>
        <tag>接口</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[时序图画法]]></title>
    <url>%2F2018%2F10%2F23%2FTool%2F%E6%97%B6%E5%BA%8F%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[时序图画法三次握手(没有加减号)participant Sever A as Aparticipant Sever B as B+ A-&gt;B: SYN=1，Seq=1234- B-&gt;A: SYN=1，ACK=1，Seq=4321，Ack=1235+ A-&gt;B: ACK=1，Seq=1235，Ack=4322 四次挥手 四次挥手(没有加减号)participant Sever A as Aparticipant Sever B as B+ A-&gt;B: FIN=1，ACk=1，Seq=1234，Ack=4321- B-&gt;A: ACK=1，Seq=4321，Ack=1235+ B-&gt;A: FIN=1，ACK=1，Seq=1235，Ack=4322- A-&gt;B: ACK=1，Seq=1235，Ack=4322 四次挥手 participant Sever A as A participant Sever B as B A->B: SYN=1，Seq=1234 B->A: SYN=1，ACK=1，Seq=4321，Ack=1235 A->B: ACK=1，Seq=1235，Ack=4322{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("sequence-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value)); var diagram = Diagram.parse(code); diagram.drawSVG("sequence-0", options);participant Sever A as A participant Sever B as B A->B: FIN=1，ACk=1，Seq=1234，Ack=4321 B->A: ACK=1，Seq=4321，Ack=1235 B->A: FIN=1，ACK=1，Seq=1235，Ack=4322 A->B: ACK=1，Seq=1235，Ack=4322{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("sequence-1-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-1-options").value)); var diagram = Diagram.parse(code); diagram.drawSVG("sequence-1", options);]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LoadRunner 自带练习服务器]]></title>
    <url>%2F2018%2F10%2F23%2FLoadRunner%2FLoadRunner%20%E8%87%AA%E5%B8%A6%E7%BB%83%E4%B9%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[LoadRunner 自带练习服务器[toc] 1 注册1.1 新建项目+录制 打开软件-新建脚本 新建web脚本 选项 配置internet浏览器 options设置这两个选项不同计算机不同，不成功换一个 填写网址启动LR自带练习服务器 http://127.0.0.1:1080/WebTours/ 1.2 脚本参数化 录制注册函数 将注册名称参数化 web_submit_form("login.pl", "Snapshot=t7.inf", ITEMDATA, "Name=username", "Value=&#123;username&#125;", ENDITEM, "Name=password", "Value=123456", ENDITEM, "Name=login.x", "Value=85", ENDITEM, "Name=login.y", "Value=7", ENDITEM, LAST); 编辑{username}的迭代值 1.3 运行设置 runtime_settings 2 关闭session校验的随机登录 随机数生成函数产生从X~Y的数：k=rand()%(Y-X+1)+X; 关闭隐藏字段标记（Session）——取消对勾 新建动作 录制函数 数据参数化 随机生成test0到test10的用户名 char username[100] = "test";char num_str[100]; int num = rand()%(10-0+1)+0;itoa(num,num_str,10);strcat(username,num_str);lr_save_string(username,"user_name"); 传参 web_submit_form("login.pl", "Snapshot=t7.inf", ITEMDATA, "Name=username", "Value=&#123;user_name&#125;", ENDITEM, "Name=password", "Value=123456", ENDITEM, "Name=login.x", "Value=85", ENDITEM, "Name=login.y", "Value=7", ENDITEM, LAST); 增加思考时间，方便查看(在登录脚本后，退出脚本前) lr_think_time(2); 运行设置取消注册动作增加登录动作 3 打开session校验的随机登录——关联 打开试验网页的session校验隐藏字段标记（Session）打上对勾 创建新步骤+录制登录脚本脚本录制完后，发现无法登录，因为缺乏session校验相当于口令令牌没有了 右键-添加步骤-自定义函数web_reg_save_program session代码参数化获取代码如下： web_reg_save_param("usersessionID","LB=name=userSession value=", //截取段前的文字"RB=&gt;\n", //截取段后的文字"Ord=1","Search=Body","IgnoreRedirections=Yes",LAST); 注意这一段函数要放在获取session之后，也要在使用session之前； 调整运行设置，执行成功 4 检查点未完待续]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>自动化</tag>
        <tag>LoadRunner</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动化测试-QTP]]></title>
    <url>%2F2018%2F10%2F20%2FQTP%26UFT%2F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95-QTP(2)%2F</url>
    <content type="text"><![CDATA[自动化测试-QTP[toc] 1 简介 vbs语言 quick test professional 目的：执行重复的手动测试，主要用于回归测试和测试一个软件的新版本 理念：关键词驱动（keyword Driven）简化测试的创建和维护，无需代码 自动化测试目前不是万能的，不能替代手工 测试用例的设计、界面和用户的体验、正确性的检测 自动化适用于重复执行的机械化的自动加界面操作、计算、数值比较、搜索，实现更加快速的回归测试。 开始时机 不应再界面我稳定时开始 界面雏形时期，可以基于界面圆形提供的空间来尝试自动该工具的适用性（能录制） 开发核心可重用的控件，需要开发人员提供更多接口2 安装一路默认安装，不要选用“运行许可证”，可有一个月的使用时间3 测试流程的7个阶段3.1 录制前的准备工作 在测试前需要先就确认你的应用程序以及QTP是否符合你的测试需求。确认你已经知道如何对应程序进行测试，例如：要测试那些功能，操作步骤，输入的数据，预期的结果等。 还需要准备好Test case 在进行自动化之前，要将测试内容文档化，不建议直接录制脚本 测试内容文档化的好处a) 在录制脚本前将脚本设计好，可以保证脚本录制过程流畅b) 利于团队协作，这几测试案例和脚本开发可以不是同一个人c) 便于后期的维护d) 并非所有的测试都能够自动化，自动化的test Caes可以和手工Tdst caes 一起维护 文档化方式 利用word或者Exeel 利用专业的TEST case管理工具，如Testdirector、testmanager，这些工具可以将TESt caes和test scerpt 关联3.2 录制脚本当你浏览你的网站或是操作你的应用程序时，QTP会在Keyword View窗口中以表格的形式，显示录制的操作步骤，每一个操作不走都是使用者在录制时的操作，如在网页上点选一个超级连接，或是按下窗口上的按钮。 3.3 加强脚本 添加检查点：已验证应用程序的功能是否正确 参数化：让你使用多组的数据测试你的应用程序 添加逻辑判断：让你可以进行更复杂的测试3.4 对测试脚本除错-debug在修改测试脚本之后，需要对测试脚本进行除错，已确保测试脚本能正常且流畅的执行3.5 执行测试脚本在新版本应用程序或者是网站上执行测试脚本，执行脚本，检查应用程序的功能是否正常3.6 分析测试结果 results active action 3.7 汇报问题-defect4 关键字视图（keyword view） 表格驱动测试 把测试脚本的变成工作分离出去5 专家视图（Expert View） 6 活动屏幕（Active Screen） 保存执行步骤时现实的应用程序快照 可以参数化对象值，插入检查点、方法、输出值7 自动文档（auto-documentation） 8 检查点 “检查点”是将指定属相的当前值与该属性期望值进行比较的验证点。 当添加检查点时，QTP会将检查点添加到Keyword View中的当前行并在Ewpert View中添加一条“检查检查点”语句 当你运行测试时，QTP将会检查点的期望结果与当前结果进行比较。如果结果不匹配，检查点就会失败8.1 检查点类型 8.2 检查点支持 8.3 检查点添加的四种方法 菜单添加 右键添加 快捷键添加F12 在active screen里添加 8.4 检查点示例8.4.1 标准检查点在之后RUN—&gt;results 8.4.2 文本检查点唯一性：文本前后的文字来判断（左值、右值）无关前后RUN—&gt;results 8.4.3 表格检查点不选中文字，直接右键RUN—&gt;results 8.4.4 图像检查点因素：操作系统、屏幕分辨率和颜色设置 错误容忍度RUN—&gt;results 8.4.5 页面检查点注意：随便任意位置右键插入检查点，点选根目录RUN—&gt;results 8.4.6 检查XML Xenu抓取网络数据 暂停—-&gt;停止 文件导出google地图文件—-&gt;xml 新建一个测试 调整录制规则 导入XML文件 RUN 改一个再试一次 9 参数化QTP将脚本中的固定值用变量来代替，以达到扩展脚本功能的目的 定义数据表参数 在数据表中输入参数 修正受到参数化影响的测试步骤 执行并分析使用参数的测试步骤 10 建立输出值从前一个页面获取机票价格 建立检查点，设置参数RUN 11 补录 打开网页需要补录的位置 切换到QTP，录制模式调整为“当前打开的浏览器”，点击录制 切换到浏览器，录制相关内容，不做多余操作 切换回QTP，点击录制结束12 正则表达式正则表达式是一种模式去匹配一类字符串的一个公式。也就是说只有值类型为字符串才能够使用 注意左右值是否变化 13 action在Action上可进行的操作 Action拆分 插入新的Action 将Action设定成可以重复使用的Action 插入Call的Action 插入COPY的Action13.1 拆分action QTP中的一个Action是一个可以重复使用（Reuse）的最小单位 可以将新建的Action1切割成多个Action，让测试脚本更为模块化且更容易被重复使用。 订票系统的脚本可以拆分为：登录网站、搜索并预定机票、注销 点击页面切选择统计关系或父子关系 13.2 call action 和 copy action插入Call Action 和插入Copy Action 的区别当以复制Copy的方式插入动作，可以修改这个动作的副本，而且修改不会影响到原来的动作，原来的动作的改变也不会影响到这个副本当以呼叫Call的方式插入动作，这个动作会变成只读的动作，只能在原来的测试脚本中才能修改被呼叫的动作。使用呼叫的方式，测试脚本可以有比较好的可维护性，因为当被测系统改变时，你只要修改原来的测试脚本就可以了。 设置成局部参数运行设置 Data Table中Global和其他数据表的区别]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>自动化</tag>
        <tag>QTP</tag>
        <tag>UFT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动化测试-QTP]]></title>
    <url>%2F2018%2F10%2F20%2FQTP%26UFT%2F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95-QTP(1)%2F</url>
    <content type="text"><![CDATA[自动化测试-QTP1 专家视图对于无法再关键字中实现的复杂操作，如动态对象、个性化测试结果、对象运行时状态属性值。VirtualBasic Script 测试对象：test object—TO，再脚本中相差UN个hi安用于描述应用的对象。 运行时对象：run-time object，RO，应用中的实际对象，对象的方法在运行中被执行 录制过程： 确定挡墙操作对象类，创建测试对象 读取对象挡墙属性值，存储一组属性和属性值到对象中 为测试对象创建独特的有别于其他对象的名称，区别于其他 记录在对象上的操作 QTP回放过程： 根据对象名称到对象存储库中查找响应对象。 读取对象的属性 给予对象描述在QTP中查找相应对象2 QTP对象库2.1 对象存储库 对象嗅探（Object Spy）：先打开QTP，再打开IE浏览器 对象库添加到对象库的对象，再以后编写代码时候可以自动补全 3 QTP描述性编程的两种方式3.1 对象库编程 描述登录飞机票网站后，登录的代码 资源嗅探查看对象属性 编写代码Browser("micClass:=Browser").Page("micClass:=Page").WebEdit("name:=userName").set"admin"Browser("micClass:=Browser").Page("micClass:=Page").WebEdit("name:=password").set"mercury"Browser("micClass:=Browser").Page("micClass:=Page").Image("name:=login").Click 3.2 直接描述对象方式 描述登录飞机票网站后，登录的代码 添加对象库可以自动补全 编写代码 对象1(“属性名称:=属性值”).对象2(“属性名称:=属性值”).对象3(“属性名称:=属性值”).动作Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").WebEdit("userName").Set "admin"Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").WebEdit("passWord").Set "mercury"Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").Image("Sign-In").Click 3.3 Description对象方式Set objBrowser=Description.Create()objBrowser("micClass").value="Browser"Set objPage=Description.Create()objPage("micClass").value="Page"Set objWebEdit1=Description.Create()objWebEdit1("name").value="userName"Set objWebEdit2=Description.Create()objWebEdit2("name").value="password"Set objImage=Description.Create()objImage("name").value="login"Browser(objBrowser).Page(objPage).WebEdit(objWebEdit1).Set"admin"Browser(objBrowser).Page(objPage).WebEdit(objWebEdit2).Set"mercury"Browser(objBrowser).Page(objPage).Image(objImage).Click 4 VBScript入门弹窗获取运行时的对象的属性值 添加对象 编辑代码 Set a=Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").WebEdit("userName")Set b=a.GetTOProperties()For i=0 to b.count-1 sname=b(i).name svalue=b(i).value msgbox sname &amp; ":=" &amp; svalueNext 运行 5 QTP常见的web对象 6 虚拟对象 7 注释在安装目录C:\Program Files (x86)\HP\QuickTest Professional\dat新建文件ActionTemplate.mst'Company : www.baidu.com'Author : wd'Product : software'Function : QTPtest 8 检查对象是否存在 9 链接检查 添加对象 代码设置变量名为h h= Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").Link("REGISTER").Object.hrefIf not h="http://localhost:8084/servlets/com.mercurytours.servlet.RegisterServlet" ThenReporter.ReportEvent micFail,"Error",helse msgbox "链接正确"ExitActionEnd If 运行 10 随机数x=RandomNumber(1,100)msgbox xx=RandomNumber(1,2)msgbox x VB中函数int(rnd10）+10的值的范围是rnd是产生一个0-1（不含0 1）之间的数rnd10得到一个0-10之间的数(不含0 10)int是返回一个小于等于参数的最大整数int(rnd*10）得到0-9，再加10范围是10-19Dim yRandomizey= Int(0+10*Rnd)msgbox y 11 获取单选框的内容方法1：获取单选框的index值方法2：获取单选框有几个选项方法3：获取单选框的所有值SystemUtil.Run "C:\Program Files (x86)\Internet Explorer\iexplore.exe","http://localhost:8084/servlets/com.mercurytours.servlet.WelcomeServlet"Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").WebEdit("userName").Set"admin"Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").WebEdit("password").Set"mercury"Browser("Welcome: Mercury Tours").Page("Welcome: Mercury Tours").Image("Sign-In").Click'单选框Browser("Welcome: Mercury Tours").Page("Admin Page: Mercury Tours").WebRadioGroup("option").Select"option2" 12 获取多选框3 VBS hellowordwindows下新建txt文档，另存为.vbs文件 msgbox "文本内容text",vbyesno,"标题栏text" 时间函数 currentTime=timecurrentDate=datemsgbox currentTime+currentDatemsgbox currentDate+currentTime msgbox date+timemsgbox currentTimemsgbox currentDate 显示声明和隐式声明显示：Dim，public，private 赋值 数组 Dim a(3),table(1,1)a(0)=1a(1)=2a(2)=3a(3)=4msgbox a(0)&amp;a(1)msgbox a(0)+a(1)table(0,0)="a"table(1,0)="b"table(0,1)="c"table(1,1)="d"msgbox table(1,0) 循环 Dim famname(5)famname(0)="Jan" &amp; vbCrLf &amp; "Egil"famname(1)="Tove"famname(2)="Hege"famname(3)="Stale"famname(4)="Kai Jim"famname(5)="Borge"For i=0 To 5msgbox famname(i) Next sub和function]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>自动化</tag>
        <tag>QTP</tag>
        <tag>UFT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[7 其他]]></title>
    <url>%2F2018%2F04%2F27%2FSQL%2F8%20%E5%B0%8F%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[8 其他@(06 数据库) [toc] 1 数据库语言按功能分类 SQLStructure Query Language语言共分为四大类： 数据查询语言DQL —-Data Query Language 数据操纵语言DML——Data Manipulation Language 数据定义语言DDL —-Data Define Language 数据控制语言DCL —-Data Control Language 1 数据查询语言DQL数据查询语言DQL基本结构是SELECT &lt;字段名表&gt;FROM &lt;表或视图名&gt;WHERE &lt;查询条件&gt; 2 数据操纵语言DML数据操纵语言DML主要有三种形式： 插入：INSERT 更新：UPDATE 删除：DELETE 3 数据定义语言DDL数据定义语言DDL用来创建(create)数据库中的各种对象表 TABLE视图 VIEW索引 INDEX同义词 SYN聚簇 CLUSTER注意DDL操作是隐性提交的！不能rollback 4 数据控制语言DCL数据控制语言DCL用来授予或回收访问数据库的某种特权-控制数据库操纵事务发生的时间及效果，对数据库实行监视等。如：1) GRANT：授权。2) ROLLBACK TO [SAVEPOINT]：回退到某一点。3) COMMIT [WORK]：提交。注rollbac和commit有的地方也叫事务控制语句（TCL） 提交数据有三种类型 显式提交用COMMIT命令直接完成的提交为显式提交。其格式为：SQL&gt;COMMIT； 隐式提交用SQL命令间接完成的提交为隐式提交。这些命令是：ALTER，AUDIT，COMMENT，CONNECT，CREATE，DISCONNECT，DROP，EXIT，GRANT，NOAUDIT，QUIT，REVOKE，RENAME。 自动提交若把AUTOCOMMIT设置为ON，则在插入、修改、删除语句执行后，系统将自动进行提交，这就是自动提交。其格式为：SQL&gt;SET AUTOCOMMIT ON； 2 开机加速 利用 bat 批量处理命令实现手动控制mysql /Oracle 服务的开启和关闭 防止开机卡顿 我的电脑-》管理-》服务-》相关服务（mysql56和oracle开头的）调节成手动，即开机不启动 等我们用数据库时再通过bat文件开启具体步骤 建一个 “.txt” 文件，输入下面的代码并保存。 把“.txt”改成“.bat”。 双击运行就ok了，值得注意的是，对于win8 或win10 来说要用“以管理员身份运行” 1 开启mysql 相关服务注意:有的人是mysql，或者mysql57net start MySQL56pause 2 关闭mysql 相关服务net stop MySQL56pause 3 开启Oracle 相关服务注意：有的人安装了好几次oracle，服务名称可能是home2net start OracleServiceORCLnet start OracleOraDb11g_home1TNSListenernet start OracleOraDb11g_home1ClrAgentpause 4 关闭Oracle 相关服务net stop OracleServiceORCLnet stop OracleOraDb11g_home1TNSListenernet stop OracleOraDb11g_home1ClrAgentpause 我做好的bat文件有时候要右键，用管理员权限运行才有效。 3 可视化工具navicat 可以方便的看出数据库的结构，表、视图，鼠标点一点 可以方便的创建表并插入数据，直接保存就行 再查询里面创建的查询可以直接保存为书签，方便再次查看4 mysql语法高亮工具mycli 只支持MYSQL的客户端 优点 支持语法高亮 当你输入SQL关键字，数据库的表格和列时可自动补全 智能补全，会提示文本感应的补全 MyCli安装安装好了pip的服务器上直接使用pip进行安装（就是安装好了python的电脑上）打开cmd终端，输入pip install mycli 如果出现Did not provide a command,说明电脑上其他应用存在pip的环境变量。比如strawberry软件（51testing电脑还原后自带。。。）。运行pip.exe install mycli 登陆服务器mycli -u root 输入密码：root 即可登陆成功（此处密码不显示光标） 这是我做的命令行bat直接用mycli进入root账号界面 接下来操作等同mysql，但多了很多东西 5 精简的oracle5.1 企业版 oracle 11g r2 缺点 安装后文件高达4个GB，绝大多数学习时用不到 还有很多的后台启动服务，用不到还导致电脑启动缓慢 监听服务也需要instantclient另外下载，才能用第三方的数据库客户端 5.2 快捷版 oracle EX 优势 300MB安装小 后台服务只有两个EX的服务 navicat不需要额外配置监听服务 这个是免费软件 百度oracleXE112 win32或oracleXE112 win64即可找到资源下载 5.3 oracleEX的优化oracleEX没有scott账号，更没有测试用的emp、dept等四张表。对此可以按照以下方式手动创建 方法一 导入双击我做好的bat批量执行文件（我的初始密码是tiger） 登陆系统管理员用户 在命令行输入SQLPLUS，连接，然后使用管理员登陆；sys\tiger as sysdba @这个sql文件，这个sql文件拖入窗口，回车SQL&gt;@...路径.../创建scott和emp.sql 方法二 手动敲入下列代码 登陆系统管理员用户 在命令行输入SQLPLUS，连接，然后使用管理员登陆；sys\(此处为你设置的密码) as sysdba 我设的密码是tiger 创建用户 create user scott identified by tiger; 授权 grant connect,resource,dba to scott;grant create any view to scott; 导入数据 GRANT CONNECT,RESOURCE,UNLIMITED TABLESPACE TO SCOTT IDENTIFIED BY TIGER; ALTER USER SCOTT DEFAULT TABLESPACE USERS; ALTER USER SCOTT TEMPORARY TABLESPACE TEMP; CONNECT SCOTT/TIGER DROP TABLE EMP; DROP TABLE SALGRADE; DROP TABLE BONUS; DROP TABLE DEPT; CREATE TABLE DEPT (DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY, DNAME VARCHAR2(14) , LOC VARCHAR2(13) ) ; CREATE TABLE BONUS ( ENAME VARCHAR2(10) , JOB VARCHAR2(9) , SAL NUMBER, COMM NUMBER ) ; CREATE TABLE SALGRADE ( GRADE NUMBER, LOSAL NUMBER, HISAL NUMBER ); CREATE TABLE EMP (EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY, ENAME VARCHAR2(10), JOB VARCHAR2(9), MGR NUMBER(4), HIREDATE DATE, SAL NUMBER(7,2), COMM NUMBER(7,2), DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT); INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK'); INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS'); INSERT INTO DEPT VALUES (30,'SALES','CHICAGO'); INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON'); INSERT INTO EMP VALUES (7369, 'SMITH', 'CLERK', 7902, TO_DATE('17-DEC-1980', 'DD-MON-YYYY'), 800, NULL, 20); INSERT INTO EMP VALUES (7499, 'ALLEN', 'SALESMAN', 7698, TO_DATE('20-FEB-1981', 'DD-MON-YYYY'), 1600, 300, 30); INSERT INTO EMP VALUES (7521, 'WARD', 'SALESMAN', 7698, TO_DATE('22-FEB-1981', 'DD-MON-YYYY'), 1250, 500, 30); INSERT INTO EMP VALUES (7566, 'JONES', 'MANAGER', 7839, TO_DATE('2-APR-1981', 'DD-MON-YYYY'), 2975, NULL, 20); INSERT INTO EMP VALUES (7654, 'MARTIN', 'SALESMAN', 7698, TO_DATE('28-SEP-1981', 'DD-MON-YYYY'), 1250, 1400, 30); INSERT INTO EMP VALUES (7698, 'BLAKE', 'MANAGER', 7839, TO_DATE('1-MAY-1981', 'DD-MON-YYYY'), 2850, NULL, 30); INSERT INTO EMP VALUES (7782, 'CLARK', 'MANAGER', 7839, TO_DATE('9-JUN-1981', 'DD-MON-YYYY'), 2450, NULL, 10); INSERT INTO EMP VALUES (7788, 'SCOTT', 'ANALYST', 7566, TO_DATE('09-DEC-1982', 'DD-MON-YYYY'), 3000, NULL, 20); INSERT INTO EMP VALUES (7839, 'KING', 'PRESIDENT', NULL, TO_DATE('17-NOV-1981', 'DD-MON-YYYY'), 5000, NULL, 10); INSERT INTO EMP VALUES (7844, 'TURNER', 'SALESMAN', 7698, TO_DATE('8-SEP-1981', 'DD-MON-YYYY'), 1500, 0, 30); INSERT INTO EMP VALUES (7876, 'ADAMS', 'CLERK', 7788, TO_DATE('12-JAN-1983', 'DD-MON-YYYY'), 1100, NULL, 20); INSERT INTO EMP VALUES (7900, 'JAMES', 'CLERK', 7698, TO_DATE('3-DEC-1981', 'DD-MON-YYYY'), 950, NULL, 30); INSERT INTO EMP VALUES (7902, 'FORD', 'ANALYST', 7566, TO_DATE('3-DEC-1981', 'DD-MON-YYYY'), 3000, NULL, 20); INSERT INTO EMP VALUES (7934, 'MILLER', 'CLERK', 7782, TO_DATE('23-JAN-1982', 'DD-MON-YYYY'), 1300, NULL, 10); INSERT INTO SALGRADE VALUES (1,700,1200); INSERT INTO SALGRADE VALUES (2,1201,1400); INSERT INTO SALGRADE VALUES (3,1401,2000); INSERT INTO SALGRADE VALUES (4,2001,3000); INSERT INTO SALGRADE VALUES (5,3001,9999); COMMIT; 修改scott密码 alter user scott identified by tiger; 解锁用户 alter user scott account unlock; 以scott模式登录 conn scott/tiger 查看验证 select * from emp; 登录plsqlp时选择EX数据库 6 推荐的免费学习网址 站长学院http://edu.cnzz.cn/s/201509/2138b5.shtml 菜鸟教程http://www.runoob.com/sql/sql-tutorial.html W3Cschool———和W3school是俩网站哦https://www.w3cschool.cn/sql/]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[6 Oracle基础操作]]></title>
    <url>%2F2018%2F04%2F26%2FSQL%2F6%20Oracle%E7%BB%83%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[6 Oracle基础操作@(06 数据库) [toc] 1 安装 2 解锁scott账户 打开命令提示符，不要登录直接输入下面： 以dba方式进入sys帐户；sqlplus sys/tiger as sysdba给scott用户解锁；alter user scott account unlock;授权scott创建视图的权限grant create any view to scott; 3 EM登陆失败解决https://localhost:1158/em/console/logon/logonoracle11g em 登录失败 “您的用户名和/或口令无效 解决 打开CMD命令窗，输命令：sqlplus "/as sysdba"alter user sys identified by orcl; 返回到em登录页面 用户名：sys 填写密码：orcl 链接身份：sysDBA4 PL/SQL DEVELOPER 客户端 创建新的文件 执行命令行 提交 commit sys账号登陆授权scott创建视图的权限（万一第一步忘了） grant create any view to scott]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5 数据库基本操作3]]></title>
    <url>%2F2018%2F04%2F26%2FSQL%2F5%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C3%2F</url>
    <content type="text"><![CDATA[5 数据库基本操作3@(06 数据库) [toc] 1 ALTER 更改 在表中添加列 ALTER TABLE table_name ADD column_name datatype给girl表增加height和weight两列alter table girl add(height number(5,2),weight number(5,2)); 删除表中的列 ALTER TABLE table_nameDROP COLUMN column_name 删除表girl的height列；alter table girl drop column height; 修改列的类型 alter table 表名modify (列名 数据类型,...);将girl表中gname字段长度改为30；alter table girl modify (gname varchar2(30)); 修改列名 alter table 表名rename column 旧列名 to 新列名; alter table girl rename column gname to girl_name; 2 VIEW 视图 视图是基于 SQL 语句的结果集的可视化的虚拟的表。 需要root账号授权 以dba方式进入sys帐户；sqlplus sys/tiger as sysdba授权scott创建视图的权限grant create any view to scott; 语法CREATE VIEW view_name ASSELECT ... FROM ... where ...; 实例 在oracle中，导入邵磊老师虚拟的四张表，学生、老师、课程、成绩注意学生的sage是日期型变量创建视图如下create view viewsc as select s.snum,s.sname,s.sage,s.sex,c.cnum,c.cname,sc.score from student s,sc,course c where sc.snum=s.snum and sc.cnum=c.cnum order by c.cname;/*查看*/select * from viewsc; 3 聚合函数count(),avg(),max(),min(),sum() 除了count，其他函数都是针对数值类型的列 max,min可以用于日期型的值 接受运算符号select count(*) from student;select count(sage) from student;select max(sage) from student;select min(sage) from student;select sum(score) from sc; select count(score) from sc; /*成绩表行数*/select sum(score)/count(score) from sc; /*平均分*/select avg(score) from sc; /*平均分*/ 4 字符函数 lower()将（）里面的值小写select lower('AbCdEfG') from dual; 返回abcdefg upper()将（）里面的值大写select upper('AbCdEfG') from dual; 返回ABCDEFG initcap() 是将每个单词的第一个字母大写,其它字母变为小写返回。select initcap('hello world') from dual; 返回Hello Worlddual是一张为了使函数符合语法的伪表。 substr(截取位置,截取长度)select substr('123456789',3,5) from dual; 返回34567 length() 返回字符串长度select length('123456789') from dual; 返回9 3 日期函数 to_date()将字符型数据转换成日期型，加两天 select to_date('1990-01-01','yyyy/mm/dd')+2 from dual; to_char()主要应用在将日期型数据转换成字符型 select to_char(sysdate,'yyyy-mm-dd hh24:mi:ss') from dual; MONTHS_BETWEEN(日期1，日期2)计算两个时间两之间的月份 计算四表中学生的年龄SELECT TRUNC( MONTHS_BETWEEN(sysdate,sage)/12) from student ; 计算emp表（scott自带）中员工的工龄select trunc( months_between ( to_date('2018/02/10','yyyy/MM/dd'), e.hiredate )/12) from emp e; 6 分组函数 group by将数据按照一定要求，根据一个或多个列对结果集进行分组这里结合sum()函数统计下列表格的第三列。 G1 G2 G3 春 梅 1 春 兰 1 夏 竹 1 夏 菊 1 秋 风 1 秋 花 1 冬 雪 1 冬 月 1 分组一次按照G1分组，第三列求和，得到的春夏秋冬4组各为2。select G1,sum(N) from GB GROUP BY G1; 再次分组在G1分组基础上，又按照G2分组，那就分成8列了。（本例中因为第二列没有重复的值，则相当于白分组了。）select G1,sum(N) from GB GROUP BY G1;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4 数据库基础操作2]]></title>
    <url>%2F2018%2F04%2F26%2FSQL%2F4%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C2%2F</url>
    <content type="text"><![CDATA[4 数据库基础操作21 SELECT TOP, LIMIT, ROWNUM 头条用于规定要返回的记录的数目。 MySQL 语法——LIMIT SELECT column_name(s)FROM table_nameLIMIT number; 例如选取前两行SELECT * FROM Websites LIMIT 2; Oracle 语法—-WHERE ROWNUMROWNUM只能用小于和小于等于来连接。SELECT column_name(s)FROM table_nameWHERE ROWNUM &lt;= number; 例如选取前两行SELECT * FROM Websites WHERE ROWNUM &lt;= 2; SELECT TOP 例如 从 “Websites” 表中选取头两条记录：SELECT * FROM Websites LIMIT 2; 2 LIKE 模糊搜索 通配符 描述 % 替代 0 个或多个字符 _ 替代一个字符 例子1选取 name 以字母 “G” 开始的所有客户：SELECT * FROM Websites WHERE name LIKE 'G%'; 例子2选取 name 以字母 “k” 结尾的所有客户： SELECT * FROM Websites WHERE name LIKE '%k'; 例子3选取 name 包含模式 “oo” 的所有客户：SELECT * FROM Websites WHERE name LIKE '%oo%'; NOT关键字，您可以选取不匹配模式的记录。选取 name 不包含模式 “oo” 的所有客户：SELECT * FROM Websites WHERE name NOT LIKE '%oo%'; 3 REGEXP 正则表达式选取 name 以 “G”、”F” 或 “s” 开始的所有网站：SELECT * FROM Websites WHERE name REGEXP '^[GFs]'; 选取 name 以 A 到 H 字母开头的网站： SELECT * FROM Websites WHERE name REGEXP '^[A-H]'; 4 IN 和 BETWEEN 范围IN 操作符允许您在 WHERE 子句中规定多个值。 选取 name 为 “Google” 或 “菜鸟教程” 的所有网站：SELECT * FROM Websites WHERE name IN ('Google','菜鸟教程'); IN与=的异同 相同点：均在WHERE中使用作为筛选条件之一、均是等于的含义 不同点：IN可以规定多个值，=规定一个值 BETWEEN 操作符用于选取介于两个值之间的数据范围内的值。 下面的 SQL 语句选取 alexa 介于 1 和 20 之间的所有网站： SELECT * FROM Websites WHERE alexa BETWEEN 1 AND 20; 5 AS 别名目的：创建别名是为了让名称的可读性更强。 列的 SQL 别名语法下面的 SQL 语句指定了两个别名，一个是 name 列的别名，一个是 country 列的别名。提示： 如果列名称包含空格，要求使用双引号或方括号。 不加as是最好的，oracle再将子查询整个别名时会报错。SELECT name AS n, country AS c FROM Websites; 列组合的 SQL 别名语法把三个列（url、alexa 和 country）结合在一起，并创建一个名为 “site_info” 的别名：SELECT name, CONCAT(url, ', ', alexa, ', ', country) AS site_infoFROM Websites; 表的 SQL 别名语法 选取 “菜鸟教程” 的所访问记录。我们使用 “Websites” 和 “access_log” 表，并分别为它们指定表别名 “w” 和 “a” SELECT w.name, w.url, a.count, a.date FROM Websites AS w, access_log AS a WHERE a.site_id=w.id and w.name="菜鸟教程"; 6 JOIN 连接JOIN 子句用于把来自两个或多个表的行结合起来，基于这些表之间的共同字段。 测试数据如下| 表join1 | 表join2 || :————: | :————: || | | 在mysql上，两张表的创建和数据插入/*创建链接表1 并写入数据*/DROP TABLE join1;CREATE TABLE join1 ( id int(2) DEFAULT NULL, data1 varchar(255) DEFAULT NULL); INSERT INTO `join1` VALUES ('1', '都有');INSERT INTO `join1` VALUES ('3', 'join1有');INSERT INTO `join1` VALUES ('5', 'join1有');INSERT INTO `join1` VALUES ('7', 'join1有'); /*创建链接表2 并写入数据*/DROP TABLE join2;CREATE TABLE join2 ( id int(2) DEFAULT NULL, data2 varchar(255) DEFAULT NULL); INSERT INTO `join2` VALUES ('1', '都有');INSERT INTO `join2` VALUES ('2', 'join2有');INSERT INTO `join2` VALUES ('4', 'join2有');INSERT INTO `join2` VALUES ('6', 'join2有'); ```select * from join1;select * from join2; 测试结果如下： inner join left join right join `在mysql上三种查询`/*join*/SELECT join1.id, join1.data1,join2.id,join2.data2FROM join1 JOIN join2 /*等于inner join*/ ON join1.id=join2.id; /*left join*/SELECT join1.id, join1.data1,join2.id,join2.data2FROM join1 LEFT JOIN join2 /*左连接*/ ON join1.id=join2.id; /*right join*/SELECT join1.id, join1.data1,join2.id,join2.data2FROM join1 RIGHT JOIN join2 /*右连接*/ ON join1.id=join2.id; 代码数据文件source 空格 拖入文件，删除双引号（如果有），回车。7 UNION 合并UNION 操作符用于合并两个或多个 SELECT 语句的结果集。 UNION 操作符选取不重复的值。 例子SELECT country FROM WebsitesUNIONSELECT country FROM appsORDER BY country; UNION ALL 操作符选取可重复的值。 例子 SELECT country FROM WebsitesUNION ALLSELECT country FROM appsORDER BY country; 例子 用 UNION ALL 从 “Websites” 和 “apps” 表中选取所有的中国(CN)的数据SELECT country, name FROM Websites WHERE country='CN'UNION ALLSELECT country, app_name FROM apps WHERE country='CN'ORDER BY country; 8 SELECT INTO 复制到不存在的新表 创建 Websites 的备份复件Backup2016： SELECT * INTO Backup2016 FROM Websites; 只复制一些列插入到新表中： SELECT name, url INTO Backup2016FROM Websites; 只复制中国的网站插入到新表中： SELECT * INTO Backup2016 FROM WebsitesWHERE country='CN'; 复制多个表中的数据插入到新表中： SELECT Websites.name, access_log.count, access_log.dateINTO Backup2016FROM WebsitesLEFT JOIN access_logON Websites.id=access_log.site_id; 5.创建一个新的空表（通过添加促使查询没有数据返回的 WHERE 子句）SELECT * INTO newtable FROM oldtable WHERE 1=0; 9 INSERT INTO SELECT 复制到已存在的旧表例子复制 “apps” 中的数据插入到 “Websites” 中：INSERT INTO Websites (name, country)SELECT app_name, country FROM apps; 再单独复制 QQ APP一行 到 “Websites” 中：INSERT INTO Websites (name, country)SELECT app_name, country FROM appsWHERE id=1; 查询可得到 10 CREATE 创建1. 创建数据库创建一个名为testmysql2的数据库CREATE DATABASE testmysql2; 2. 创建表创建一个年龄可以到三位数的女孩在myslq中create table girl( gname varchar(20), age int(3), city varchar(10)); 在oracle中create table girl( gname varchar2(20), age number(3), city varchar2(10)); 11 Constraints 约束1 NULL 空值 如果不向字段添加值，就无法插入新记录或者更新记录。CREATE TABLE Persons(P_Id int NOT NULL,LastName varchar(255) NOT NULL); 2 UNIQUE &amp; PRIMARY KEY 唯一 如果数据和该列的数据重复，无法插入新记录或者更新记录。 每个表可以有多个 UNIQUE 约束， 每个表只能有一个 PRIMARY KEY 约束。 在mysql中CREATE TABLE Persons(P_Id int NOT NULL,LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255),UNIQUE (P_Id) --或 PRIMARY KEY (P_Id))； 在oralcle中CREATE TABLE Persons(P_Id number NOT NULL UNIQUE, -- 或 PRIMARY KEYLastName varchar2(255) NOT NULL,FirstName varchar2(255),Address varchar2(255),City varchar2(255)); 注意:`命名主键约束，或定义联合主键约束CREATE TABLE Persons(P_Id int NOT NULL,LastName varchar(255) NOT NULL,FirstName varchar(255),Address varchar(255),City varchar(255),CONSTRAINT pk_PersonID PRIMARY KEY (P_Id,LastName)) 3 FOREIGN KEY 保证一个表中的数据匹配另一个表中的值的参照完整性。 这个外键再另一张表中必须声明为主键 primary key。create table marks(markid number(10),snum number(10) ,cnum number(10),mark number(3) ,primary key(markid),foreign key(snum) references students(snum),foreign key(cnum) references courses(cnum)); 4 CHECK 保证列中的值符合指定的条件。create table students(snum number(10),sname varchar2(30),age number(2),sex varchar(10) CHECK (sex='male' or sex='female'),primary key(snum) /*使snum可以再成绩表中作为外键*/); 5 DEFAULT 规定没有给列赋值时的默认值。 例子CREATE TABLE Persons(Id int NOT NULL,Name varchar(255) NOT NULL,Age int (3) CHECK (Age&gt;18),City varchar(255) DEFAULT 'HZ'); 12 INDEX 索引 在不读取整个表的情况下，索引使数据库应用程序可以更快地查找数据。 用户无法看到索引，它们只能被用来加速搜索/查询。 更新一个包含索引的表需要花费更多的时间例如在表websites中，用列id，创建名为IndexById的索引create index IndexById on websites (id); 查看表结构show create table websites; 12 ALTER TABLE 改变表 如需在表中添加列 ALTER TABLE table_nameADD column_name datatype 如需删除表中的列 ALTER TABLE table_nameDROP COLUMN column_name 要改变表中列的数据类型 MySQLALTER TABLE table_nameMODIFY COLUMN column_name datatype OracleALTER TABLE table_nameMODIFY column_name datatype;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3 数据库基本操作1]]></title>
    <url>%2F2018%2F04%2F26%2FSQL%2F3%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C1%2F</url>
    <content type="text"><![CDATA[3 数据库基本操作11 SELECT 查询下面的 SQL 语句从 “Websites” 表中选取所有列：SELECT * FROM Websites; 下面的 SQL 语句从 “Websites” 表中选取 “name” 和 “country” 列：SELECT name,country FROM Websites; 2 DISTINCT 去重DISTINCT 关键词用于返回唯一不同的值。下面的 SQL 语句仅从 “Websites” 表的 “country” 列中选取唯一不同的值，也就是去掉 “country” 列重复值：SELECT DISTINCT country FROM Websites; 3 WHERE 筛选WHERE 子句用于提取那些满足指定标准的记录。从 “Websites” 表中选取国家为 “CN” 的所有网站：SELECT * FROM Websites WHERE country='CN'; 4 AND &amp; OR 与或 如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。 从 “Websites” 表中选取国家为 “CN” ，且alexa排名大于 “50” 的所有网站：SELECT * FROM WebsitesWHERE country='CN'AND alexa &gt; 50; 如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。 下面的 SQL 语句从 “Websites” 表中选取国家为 “USA” 或者 “CN” 的所有客户：SELECT * FROM WebsitesWHERE country='USA'OR country='CN'; 5 ORDER BY 和 DESC 排序 ORDER BY 关键字用于对结果集按照一个列或者多个列进行排序。 下面的 SQL 语句从 “Websites” 表中选取所有网站，并按照 “alexa” 列排序：SELECT * FROM WebsitesORDER BY alexa; DESC 逆序 下面的 SQL 语句从 “Websites” 表中选取所有网站，并按照 “alexa” 列降序排序：SELECT * FROM WebsitesORDER BY alexa DESC; 多列 先将country值这一列排序，同为CN的排前面，同属USA的排后面； 然后在同属CN的这些多行数据中，再根据alexa值的大小排列。SELECT * FROM WebsitesORDER BY country,alexa; 6 INSERT INTO 插入 INSERT INTO 语句用于向表中插入新记录。 INSERT INTO 语句可以有两种编写形式。 第一种形式无需指定要插入数据的列名，只需提供被插入的值即可： INSERT INTO table_nameVALUES (value1,value2,value3,...); 第二种形式需要指定列名及被插入的值： INSERT INTO table_name (column1,column2,column3,...)VALUES (value1,value2,value3,...); 向 “Websites” 表中插入一个新行。INSERT INTO Websites (name, url, alexa, country)VALUES ('百度','https://www.baidu.com/','4','CN'); select * from websites;得到 在指定的列插入数据 只在 “name”、”url” 和 “country” 列插入数据（id 字段会自动更新）：INSERT INTO Websites (name, url, country)VALUES ('stackoverflow', 'http://stackoverflow.com/', 'IND'); 7 UPDATE 更新 UPDATE 语句用于更新表中已存在的记录。 把 “菜鸟教程” 的 alexa 排名更新为 5000，country 改为 USA。UPDATE Websites SET alexa='5000', country='USA' WHERE name='菜鸟教程'; 查询可知 Update 警告！在上面的实例中，如果省略了 WHERE 子句，如下所示：UPDATE WebsitesSET alexa='5000', country='USA' 执行以上代码会将 Websites 表中所有数据的 alexa 改为 5000，country 改为 USA。 8 DELETE 删除 DELETE 语句用于删除表中的行。 DELETE 警告！如果省略了 WHERE 子句，所有的记录都将被删除！ 从 “Websites” 表中删除网站名为 “百度” 且国家为 CN 的网站 。DELETE FROM WebsitesWHERE name='百度' AND country='CN'; 删除类型 DROP删除表websites，并释放空间，将websites删除的一干二净。 DROP table websites; TRUNCATE删除表test里的内容，并释放空间，但不删除表的定义，表的结构还在。 TRUNCATE websites; DELETE1. 删除指定数据 删除表websites中等于30的且国家为US的数据DELETE FROM websitesWHERE age=30 AND country='US'; 2. 删除整个表 仅删除表websites内的所有内容，保留表的定义，不释放空间。DELETE FROM websitesDELETE * FROM websites;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2 MySQL 基础操作]]></title>
    <url>%2F2018%2F04%2F26%2FSQL%2F2%20MySQL%20%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[2 MySQL 基础操作1 安装1.1 安装图解点击另存为 1.2 常见故障排除 host文件被改动C:\Windows\System32\drivers\etchost文件在科学上网、学SVN时可能被改过，多余都删掉。 环境变量未添加我的电脑-&gt;右键-&gt;属性-&gt;高级系统设置-&gt;高级-&gt;环境变量path添加C:\Program Files\MySQL\MySQL Server 5.6\bin;最前面加分号；同其他环境变量格开。 mysql后台服务被杀软关闭我的电脑-&gt;右键-&gt;管理-&gt;服务启动mysql56 2 步骤（先登陆上再说） 先登入服务器，可以进行数据库database的操作 选择数据库，可以进行表table操作2.1 登陆服务器本地服务器的MySQL账户名：root密码：rootmysql -u root -p 回车，输入密码 2.2 创建数据库/*create database 数据库名称； //；结尾*/create database testmysql； 2.3 选择数据库数据库名称： testmysql use 数据库名称 //没有；结尾 2.4 导入数据库方法1 输入source,空格，将这个sql文件拖入cmd窗口，删除双引号（如果有）回车； 方法2 自己打字/*三张表的初始化*/DROP TABLE access_log;DROP TABLE apps;DROP TABLE websites; /*创建表access_log并写入数据*/CREATE TABLE access_log ( `aid` int(11) NOT NULL AUTO_INCREMENT, `site_id` int(11) NOT NULL DEFAULT '0' COMMENT '网站id', `count` int(11) NOT NULL DEFAULT '0' COMMENT '访问次数', `date` date NOT NULL, PRIMARY KEY (`aid`)); INSERT INTO access_log VALUES ('1', '1', '45', '2016-05-10'), ('2', '3', '100', '2016-05-13'), ('3', '1', '230', '2016-05-14'), ('4', '2', '10', '2016-05-14'), ('5', '5', '205', '2016-05-14'), ('6', '4', '13', '2016-05-15'), ('7', '3', '220', '2016-05-15'), ('8', '5', '545', '2016-05-16'), ('9', '3', '201', '2016-05-17'); /*创建表apps并写入数据*/CREATE TABLE apps ( `id` int(11) NOT NULL AUTO_INCREMENT, `app_name` char(20) NOT NULL DEFAULT '' COMMENT '站点名称', `url` varchar(255) NOT NULL DEFAULT '', `country` char(10) NOT NULL DEFAULT '' COMMENT '国家', PRIMARY KEY (`id`)); /*创建表websites并写入数据*/INSERT INTO apps VALUES ('1', 'QQ APP', 'http://im.qq.com/', 'CN'), ('2', '微博 APP', 'http://weibo.com/', 'CN'), ('3', '淘宝 APP', 'https://www.taobao.com/', 'CN'); CREATE TABLE websites ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` char(20) NOT NULL DEFAULT '' COMMENT '站点名称', `url` varchar(255) NOT NULL DEFAULT '', `alexa` int(11) NOT NULL DEFAULT '0' COMMENT 'Alexa 排名', `country` char(10) NOT NULL DEFAULT '' COMMENT '国家', PRIMARY KEY (`id`)); INSERT INTO `websites` VALUES ('1', 'Google', 'https://www.google.cm/', '1', 'USA'), ('2', '淘宝', 'https://www.taobao.com/', '13', 'CN'), ('3', '博为峰', 'http://www.51testing.com/', '4689', 'CN'), ('4', '微博', 'http://weibo.com/', '20', 'CN'), ('5', 'Facebook', 'https://www.facebook.com/', '3', 'USA'); /*查看三张表*/select * from websites;select * from access_log;select * from apps; 如果乱码，使用语句set character_set_client=gb2312;set character_set_results=gb2312; 此时MYSQL的数据库结构是这样的连接名—-数据库——表——表中的数据 3 MYSQL基础操作3.1 登录退出和版本信息 登陆登陆成功会有提示 mysql -h 127.0.0.1 -u 用户名 -p mysql -D 所选择的数据库名 -h 主机名 -u 用户名 -p 退出：退出成功会有提示 mysql&gt;exit mysql&gt;quit mysql&gt;\q 显示当前mysql的version的各种信息mysql&gt; status; 显示当前mysql的version信息 mysql&gt; select version(); mysql&gt; show global variables like ‘port’; # 查看MySQL端口3.2 数据库基本操作 对于表的操作需要先进入库 use 库名 创建一个名为testmysql2的数据库，数据库字符编码指定为 gbk create database testmysql2 character set gbk; 删除 库名为testmysql的库drop database testmysql2; 显示数据库列表show databases; 显示testmysql下面所有的表名字show tables; 显示数据表的结构describe 表名; 清空表中记录delete from 表名;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1 数据库基础知识]]></title>
    <url>%2F2018%2F04%2F26%2FSQL%2F1%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[1 数据库基础知识1 概念定义 数据库(Database，DB)是按照数据结构来组织、存储和管理数据的建立在计算机存储设备上的仓库。 数据库软件应称为 DBMS (数据库管理系统)。数据库是通过DBMS创建和操纵的容器。 数据库指的是以一定方式储存在一起、能为多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。 特点 RDBMS即关系数据库管理系统(Relational Database Management System)的特点： 数据以表格的形式出现 每行为各种记录名称 每列为记录名称所对应的数据域 许多的行和列组成一张表单 若干的表单组成database-数据库 MYSQL的结构———(服务器账号)-&gt;(数据库)-&gt;(表空间+表) ORACLE的结构———-(唯一数据库)-&gt;(账号+绑定的表空间)-&gt;(表) 分类 关系型Relational database，是创建在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。 MySQL&amp;nbsp - MariaDB（MySQL的代替品）&amp;nbsp- Percona Server（MySQL的代替品） PostgreSQL Microsoft Access Google Fusion Tables SQL Server FileMaker Oracle Sybase dBASE Clipper FoxPro 非关系型轻量、开源、不提供SQL功能的关系数据库。 模型 数据库模型描述了在数据库中结构化和操纵数据的方法，数据库模型的分类如下： 对象模型 层次模型（轻量级数据访问协议） 网状模型（大型数据储存） 关系模型 面向对象模型 半结构化模型 平面模型（表格模型，一般在形式上是一个二维数组。如表格模型数据Excel) 架构 内层：最接近实际存储体，亦即有关数据的实际存储方式。 外层：最接近用户，即有关个别用户观看数据的方式。 概念层：介于两者之间的间接层。 数据表 一个数据库中可能包含若干个数据表， 每张表是由行和列组成，记录一条数据数据表就增加一行， 每一列是由字段名和字段数据集合组成，列被称之为字段， 每一列还有自己的多个属性，如是否允许为空、默认值、长度、类型、存储编码、注释等 键 主键 主键（primary key或unique key），又称主码，数据库表中对储存数据对象予以唯一和完整标识的数据列或属性的组合。一个数据列只能有一个主键，且主键的取值不能缺失，即不能为空值（Null）。 外键 外键（foreign key，台湾译作外来键），又称外部键。其实在关系数据库中，每个数据表都是由关系来连系彼此的关系，父数据表（Parent Entity）的主键（primary key）会放在另一个数据表，当做属性以创建彼此的关系，而这个属性就是外键。 2 ER图2.1 含义E-R图也称实体-联系图(Entity Relationship Diagram)，提供了表示实体类型、属性和联系的方法，用来描述现实世界的概念模型。 2.2 组成 矩形框：表示实体，在框中记入实体名。 菱形框：表示联系，在框中记入联系名。 椭圆形框：表示实体或联系的属性，将属性名记入框中。在主属性名下划一下划线。 连线：实体与属性之间；实体与联系之间；联系与属性之间用直线相连。2.3 一般约束 1 vs 1 1 vs N M vs N 3 范式3.1 第一范式—无重复的列 在任何一个关系数据库中，第一范式（1NF）是对关系模式的基本要求，不满足第一范式（1NF）的数据库就不是关系数据库。 关系表中每一列都是不可分割的基本数据项。同一列中不能有多个值。 举例联系人表中要存联系方式，将手机号、联系地址、邮编、邮箱全部存在一个列中就不正确;应该建立手机号、联系地址、邮编、邮箱这4列分别存放对应信息。 3.2 第二范式—无重复的行，依赖主键 第二范式（2NF）是在第一范式（1NF）的基础上建立起来的，即满足第二范式（2NF）必须先满足第一范式（1NF）。 要求数据库表中的每个实例或行必须可以被惟一地区分。 需要有可以唯一标识一行的主键字段， 举例每个班的学生信息，都有学号，就是用来唯一标识一个学生的，通过姓名是不能够的，因为有同名同姓的 3.3 第三范式—无数据冗余 满足第三范式（3NF）必须先满足第二范式（2NF）。 第三范式就是属性不依赖于其它非主属性。 举例有2张表，学生表（学号、姓名），成绩表（学号，成绩）；若是成绩表中再加入一列姓名，就是数据冗余了，因为学号已经可以唯一标识学生；成绩表（姓名、成绩）也不对，因为姓名可以重复，但学号不能重复。]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>SQl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3 移动APP测试--测试类型]]></title>
    <url>%2F2017%2F09%2F16%2FAndroidAPP%2F3%20%E7%A7%BB%E5%8A%A8APP%E6%B5%8B%E8%AF%95%E2%80%93%E6%B5%8B%E8%AF%95%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[3 移动APP测试—测试类型工具、操作集合 ☆伪造数据 fidder （2.1 功能测试-业务测试） ☆活动时间日志 catlog （3.1 性能测试-时间测试） ☆shell下查看内存操作使用（3.2 性能测试-存储空间-内存） ☆GC垃圾回收日志查询（3.2 性能测试-存储空间-内存） ☆CPU占用 emmage[网易]、GT[腾讯]、易测[阿里]（3.3 性能测试-CPU） ☆GPU过渡绘制、界面边框绘制（3.4 性能测试-GPU、6.3 用户体验-操作） ☆云测平台[百度云测、阿里云测]（4.2 兼容性测试） ☆稳定性app自动化 appium+monkey（5.1 可靠性测试-稳定性） ☆弱网模拟 NEWT（7.3 网络测试-弱网测试） [TOC] 1 安装测试1.1 安装前 检查文件是否齐全 安装设备是否符合条件 文件运行库和框架是否已经安装 apk文件病毒检测1.2 安装中 应用商店安装 上网下载apk安装 浏览器下载安装 abd命令安装 安装时提示权限是否合理1.3 安装后启动检查—不同地方启动：应用界面、桌面界面权限检查欢迎界面检查1.4 升级 升级方式adb、应用商店、网页下载 覆盖安装 新版本更新提示 非强制升级，用户可取消、老版本可用、下次启动仍然提醒 强制升级，用户不升级则无法使用，下次打开仍然提醒 不删除本地客户端能否正常更新 新版本离线覆盖当前版本 升级不丢失当前用户数据1.5 卸载测试 安卓卸载路径：设置-存储-应用-卸载 桌面拖拽卸载 考虑通过adb、第三方应用、系统进行卸载 卸载删除用户数据 2 功能测试 单功能测试 功能交互测试 业务流程测试 移动app 分为原生app（无法用fiddler抓包）、web app和hybrid混合app。随着html5技术普及，web app 和混合app方式比较多。移动app作为前端展示用，数据还是由服务器端处理，再下发给app使用，比较常用的数据下发方式通过json数据格式。 2.1 业务测试为了能测试的更细， 需要检查app 和服务器端的数据交互，就需要使用fiddler 或charles等代理软件进行数据的捕获和检查。 本地伪造数据 fiddler☆实现原理：拦截请求并修改返回数据参考资料：http://www.hangge.com/blog/cache/detail_1697.html 选定端口 过滤信息 选择操作数据 jason数据包另存txt文件到本地 1）2） jason格式 修改txt文件 1） 2） 修改返回数据 刷新手机页面 2.2 功能交互与手机系统功能的交互—短信、来电、闹钟与手机管理软件或安全软件的交互—权限、休眠、关闭网络 2.3 操作方式测试屏幕旋转测试—横屏和竖屏情况下的功能和显示等三大天王：锁屏键、home键、back键测试：点击、长按、双击音量、电源：功能是否改变、组合按键屏幕：滑屏、长按、双击、多点触控 2.4 通知栏测试应用的即时消息在通知栏显示有些功能可能会在通知栏实现，比如控件：音乐播放器、日历等 2.5 双卡双待测试3 性能测试 包含：负载测试、容量测试、压力测试 针对：响应时间、资源消耗、吞吐量 对比： 无论是哪种性能测试，都需要进行横向和纵向的对比，横向是指和竞品进行对比，纵向是指和以前的版本进行对比。另外需要形成性能的基准数据，以后测试时都将性能测试的结果和基准数据进行对比 3.1 时间使用app 时用户感受到的时间， 都可能包含以下几个部分：服务器处理时间：和服务器程序有关网络数据传输时间：和网络状况有关手机app 的activity 显示时间或者控件跳转时间：手机app 控件跳转时间基本可忽略，因此手机app 核心的时间是activity显示或者跳转的时间。这里起到的启动时间和界面切换时间主要考虑也是这个时间。 启动时间 首次启动时间（冷启动） 安装好app后第一次运行的启动时间，需要启动进程、加载资源， 因此时间会长一些。 冷启动： app对应进程未运行 方法：可用kill 命令杀掉相应进程， 然后再启动app 热启动： app对应进程处于运行状态 app 是通过back 键退到后台去的， 进程并未结束， 再启动的话时间就会短些 Ecmobile 按back 键会提示退出app，退出后，利用ps 命令会发现相应进程仍然在， 这种情况下去启动ecmobile 就是热启动。 切换时间 不同的应用界面间切换，属于不同activity，这就涉及到新的activity 的加载显示 同一个activity，那就只涉及控件的跳转，不涉及新的activity 的加载显示检测activity 显示和跳转的时间活动时间catlog☆在android 的log 中查找displayed 关键字， 然后查看相应的activity。对于应用ECmobile 运行ecmobile 的app 打开日志管理软件catlog 筛选 displayed com.insthub.ecmobile在catlog 的日志抓取中可以看到启动时实际对应2 个activity：StartActivity 和EcmobileMainActivity，将2 个时间相加则得到非首次启动时间。 多次操作取平均值 输入 ps | grep com.insthub.ecmobile 运行kill -9结束相应进程，再次启动(先杀后台的background，否则会自启)由于ecmobile 并不支持热启动， 因此无法检测非首次启动时间。实际工作时需要启动多次， 取多个数据的平均值，可以操作3 次取下平均值。 3.2 存储空间 apk文件大小该文件需要放在/data/app/目录下 内存占用 native 堆内存：在使用lib 目录下那些so 文件时产生，存在限制的，具体限制在/system/build.prop 文件中， 在system 目录下输入cat build.prop | grep heap 即可查看到 dalvik 堆内存：运行java 程序时产生在system 目录下输入cat build.prop | grep heap 即可查看到。 查看内存使用☆在上图中heapstartsize 是每个应用运行时最少dalvik 堆内存，heapgrowthlimit 是每个应用dalvik 堆内存的上限，heapsize 则是在应用不限制dalvik 堆内存的情况下能使用的最大dalvik 堆内存。当应用申请的java内存超过dalvik 堆内存上限的情况下就可能导致内存溢出（OOM），从而导致应用的异常。比如加载一个超大的图片到内存就容易产生这种问题。在shell下通过以下都可以查看到每个应用内存的使用。 top -n 400 | grep com.insthub.ecmobile（ctrl+C结束） dumpsys meminfo | grep com.insthub.ecmobile procrank 内存溢出：程序申请内存时，没有足够的内存供申请者使用内存泄漏：程序在申请内存后，无法释放已申请的内存空间 GC垃圾回收的日志查询☆Android 移动应用的内存性能测试还可包含GC（垃圾回收）的测试，java 程序本身是有内存回收机制的，当内存不再使用或者内存不够的情况下会进行垃圾回收，但是有可能由于应用程序存在的问题， 导致垃圾回收不够及时。 日志的输出时间logcat -v time | grep GC 日志的输出时间和线程信息logcat -v time -v threadtime | grep GC 生成日志tet文件 先挂载，改权限，导出文件。注意要进入到system里面挂载 ，输入Mount命令，比如我现在要把system挂载为可读写，那么我要在下面的信息中找到 /system所在的行。mount -o rw,remount -t ext4 /dev/block/sda6 /system文件系统格式 挂载目录,等一会挂载完毕，再次使用使用mount命令查看。若变ro变成了rw说明就挂载成了读写了最后再执行logcat -v time -v threadtime | grep GC &gt;gcfile.txt !导出到电脑(再cmd-adb下，不是shell下)的C:\UsersC:\Users\test&gt;adb pull /system/gcfile.txt 运行空间运行空间的测试主要关注/data/data/包名/目录空间大小， 可以通过du -sH命令进行。下图中ecmobile 的应用占用的运行空间为4M，当然这个数字随着应用的使用是不断变化的， 因此需要进行多次获取来了解运行空间占用的变化趋势。再shell下输入du -sH再应用目录下输入du -sH直接查询输入du -sH /data/data/com.insthub.ecmobile 3.3 CPU占用3.3.1 Emmagee（网易）☆启动emmagee， 选中需要测试的应用， 点击开始测试， emmagee 就会监控该app 的内存占用、cpu 占用等信息，结束测试后结果会作为csv 文件保存到sdcard 上， 通过adb pull 即可将csv 文件取到电脑上查看。使用EXCEL打开CSV文件乱码问题处理：使用记事本打开，另存为选择编码格式为ANSI编码，再使用EXCEL打开即可正常查看。 参考：http://blog.csdn.net/passionboyxie/article/details/39666183http://qa.blog.163.com/blog/static/19014700220130292180442/ 3.3.2 GT 、WeTest（腾讯）☆这个工具能测试的性能指标有内存，cpu，fps等指标，直接把apk安装在要测试的目标手机上，安装后启动GT，在选择界面选择要测试的app即可，如下图所示： 开始点击running 测试中红色按钮开始和停止 查看数据存盘导出cvs文件 参考：http://www.51testing.com/html/43/489243-3569603.html 3.3.3 易测（阿里巴巴）☆需要登陆https://easytest.taobao.com/ 3.4 GPU占用图像处理器GPU：专门进行图像显示的处理关注点GPU过度绘制界面区域重复绘制多次，浪费GPU资源，产生无效的电量消耗。 开启GPU过渡绘制和布局边界☆操作：在设置-关于设备中连续点击版本号，可启动开发者选项，勾选GPU 过度绘制的选项。 开启 效果 不同的颜色代表不同的重复绘制次数，一般需要重点关注红色尤其是深红色区域， 对这些区域的显示进行优化。所谓过度绘制就是同一个区域绘制多次，客观上造成了GPU 占用较多；当然GPU过度绘制对于大多数应用而言并不是一个特别大的问题 屏幕滑动帧速率、屏幕滑动平滑度一般通过高速相机拍照来获取数据进行计算 3.5 流量使用中流量待机流量 3.6 功耗 安装功耗在安装前测试一下电量，然后安装完后再测试一下电量， 看安装过程是否会耗费较多电量。 待机功耗是指让应用在后台运行的情况下的功耗 使用功耗当前正在使用应用时的功耗4 兼容性测试 环境兼容性：操作系统、浏览器、屏幕尺寸、温度、压力 android系统：开源、碎片化，手机厂家多导致硬件、系统差异4.1 考虑内容 版本：android本身版本，各厂商进行修改后的版本 屏幕尺寸：5寸，5.7寸；720P，1080P；18:9全面屏。。。 屏幕像素（分辨率）：720P，1080P；18:9全面屏。。。 权限设置：不同用户对设备权限控制不一定相同，root，摄像头、声音。。。 优化软件：360、腾讯管家，黑域、绿色守护、写轮眼4.2 云测平台提供手机租用的平台，虚拟或真机，降低测试成本 阿里云测mqc：https://mqc.aliyun.com testin 百度云测 腾讯云测 阿里云测mqc☆5 可靠性测试 稳定性测试 异常测试：断电、断网、数据丢失、程序异常退出5.1 稳定性测试手机app自动化测试工具appium+monkey☆monkeyAndroid系统自带，模拟随机点击monkey -p PackageName --throttle Number -s Number -v -v -v Number -p 参数后面跟的是app 对应的包名， 可以通过aapt 工具查看到。--throttle 参数后面跟的是操作时间间隔， 常用500， 表示500ms 也就是半秒， 模拟人的操作频率。-s 参数后面跟的是随机数序列的种子， 该数字不变的情况下，多次运行生成的操作序列是一样的。3 个-v 表示记录日志是最细的， 最后的数字则表示操作的次数。例如：adb shell monkey -p com.insthub.ecmobile --throttle 500 -s 9 -v -v -v 100导出日志到计算机D盘：adb shell monkey -p com.insthub.ecmobile --throttle 500 -s 9 -v -v -v 100 &gt;d:/monkeylog.txt 由于monkey 是随机操作，因此无法保证每个页面以及界面元素都有被遍历到。 一种比较简单但不太精确的做法是通过修改-s 参数后的数字来多次随机操作。 另一种比较精确的是利用一些自动化工具来识别页面元素，然后结合编程利用monkey 来进行遍历。 利用monkey 进行稳定性测试， 不允许出现crash 和anr（ 应用无响应） 的情况。 simiasque 遮挡状态栏 效果 Monkey 的随机操作还有可能会涉及到状态栏的操作，有可能会误关闭wifi 等，所以为了避免这种情况出现，可以用simiasque 的app来遮住状态栏，避免monkey 操作到状态栏。 appium ？ 覆盖所有功能页面 5.2 异常测试 断电重启 网络中断Ecmobile 在网络意外中断的情况下， 其首页将无法更新的情况重新安装ecmobile，在网络连接异常的情况下打开ecmobile，这个时候首页显示的为空白， 恢复网络后，发现首页无法更新，但搜索界面、购物车界面、个人中心都可以正常更新， 只能关闭app后重新运行app才可以解决该问题。 程序异常退出或者通过程序信息中强制终止 APK包含中文名称 清除缓存 6 用户体验测试—简易性测试操作简便，界面美观易懂 6.1 特点 移动app受到界面大小的限制，通常通过图标来代表文字， 界面上文字会比较少 移动app是用手指来进行操作的， 因此需要考虑到操作起来是否方便 6.2 界面图标是否准确：通过图标最好就能看出是什么功能 6.3 操作 点击区域大小是否合理等：打开显示区域边界（开发选项） 通过显示布局边界可以看到界面元素的可操作范围（开发选项） 7 网络测试 丢包：丢包最常见。在TCP协议中，需要不停的发送请求，来确认连接状态，一旦发生丢包，就需要重传； 延时：由于出现了网络波动，导致数据包在传输的时候出现了抖动，导致请求出现超时现象； 当有丢包或延时时，就需要去测试一下产品的处理机制，UI界面是否给出友好提示，服务端是否做了异常处理； 网络分类：2g，3g，4g，wifi 网络状况模拟工具：NEWT—network emulator for Windows Toolkit（微软）ATCWANem 7.1 不同网络下app的使用 条件:2g/edge/3g/4g/wifi 上行速率、下行速率 延时 丢包率7.2 切换网络时app的使用如4g 网络切换为3g 网络，又切换为wifi 网络等7.3 弱网测试 当网络信号较弱的情况下应用是否还能正常工作， 实际工作中为了做弱网测试，需要到停车场、地铁等信号较弱的地方开展测试。 模拟弱网工具：fiddler、NEWT、ATC弱网模拟NEWT☆NEWT：network emulator for windows toolkit 使用前： 使用后：（） 参考资料：http://blog.sina.com.cn/s/blog_13cc013b50102wa0g.htmlhttp://blog.csdn.net/no1mwb/article/details/53638681 7.4 无网测试]]></content>
      <categories>
        <category>AndroidAPP</category>
      </categories>
      <tags>
        <tag>APP</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2 移动APP测试--Android基础]]></title>
    <url>%2F2017%2F09%2F16%2FAndroidAPP%2F2%20%E7%A7%BB%E5%8A%A8APP%E6%B5%8B%E8%AF%95%E2%80%93Android%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[2 移动APP测试—Android基础[toc] 1 busybox.apkBusyBox 是一个集成了三百多个最常用Linux命令和工具的软件。BusyBox 包含了一些简单的工具，例如ls、cat和echo等等，还包含了一些更大、更复杂的工具，例grep、find、mount以及telnet。有些人将 BusyBox 称为 Linux 工具里的瑞士军刀。简单的说BusyBox就好像是个大工具箱，它集成压缩了 Linux 的许多工具和命令，也包含了 Android 系统的自带的shell。 2 调试桥ADB全称Android Debug Bridge，可以直接操作管理android模拟器或者真实的android设备它的主要功能有: 运行设备的shell(命令行) 管理模拟器或设备的端口映射 计算机和设备之间上传/下载文件 将本地apk软件安装至模拟器或android设备 2.1 命令要首先添加环境变量C:\Program Files\Genymobile\Genymotion\tools 启动和停止adb start-serveradb kill-server 查看版本adb version 查询已连接的设备与模拟器adb devices 对多个可连接设备选择adb -s 172.31.133.11 install demo.apk 安装一个apkadb install demo.apkadb install /Users/storm/temp/demo.apkadb install -r demo.apk #保留数据和缓存文件，重新安装adb install -s demo.apk # 安装到SD卡 卸载adb uninstall com.stormzhang.demoadb uninstall -k com.stormzhang.demo #保留数据和缓存列出手机装的所有app的包名adb shell pm list packages 列出系统应用的所有包名adb shell pm list packages -s 列出除了系统应用的第三方应用包名adb shell pm list packages -3 使用 grep 来过滤：包含qq的包名adb shell pm list packages | grep qq 清除应用数据与缓存adb shell pm clear com.stormzhang.demo 启动应用adb shell am start -n com.stormzhang.demo/.ui.SplashActivity 强制停止应用adb shell am force-stop cn.androidstar.demo 查看日志adb logcat 重启adb reboot 获取序列号adb get-serialno 获取设备的IDadb get-product 获取 MAC 地址adb shell cat /sys/class/net/wlan0/address 查看 Android 系统版本adb shell getprop ro.build.version.release 查看屏幕分辨率adb shell wm size更多https://github.com/mzlogin/awesome-adb 2.2 shell命令 登录shelladb shell 进入目录cd /data/app 列表ls -l 删除rm app.apk 更改权限chmod 777 -R demo 下载文件adb pull /addroid/lib/libwebcore.so假如要将手机data下origin文件夹所有内容拷贝到电脑的D盘的target目录下，使用命令如下：adb pull data/origin/. D:/target不加地址将会把文件导出到pwd所在位置C:\Users\AdministratorC:\Users\Administrator&gt;adb pull /system/framework/framework.jar 上传文件adb push test.txt /tmp/test.txt 退出shellexit 3 安卓系统目录3.1 \system\app这个里面主要存放的是常规下载的应用程序，可以看到都是以APK格式结尾的文件。在这个文件夹下的程序为系统默认的组件，自己安装的软件将不会出现在这里，而是\data\文件夹中。 3.2 \data/data/anr/traces.txt当你的应用程式发生ANR (Application is Not Responding) 错误时，Android 会自动将问题点的code stack list 写在这个档案内，你直接用cat 命令就可以看他的内容。 /data/app/system/app 放的是系统预载的应用程式执行档。而这里放的是使用者自己安装的应用程式执行档(*.apk)。 /data/data/&lt;app-package-name&gt;当你在程式中用Context.openFileOutput() 所建立的档案，都放在这个目录下的files 子目录内。而用Context.getSharedPreferences() 所建立的preferences 档(*.xml) ，则是放在shared_pref 这个子目录中。 /data/location/gps这里看起来，应该是给GPS location provider 用的。 /data/system/location/location.gps这个档案也是个一般文字档。主要是记录最后的经纬度座标。 LocationManager.getLastKnownLocation() 就在来这抓值的。 /data/property/persist.sys.timezone这个档案也是个一般文字档。主要是记录目前系统所使用的时区。在我的模拟器上，他记录着Asia/Taipei 这个字串。 最后，下面这两个指令，也很好用。他可以帮你将外部档案，复制到模拟器的系统档案目录内，也可以将模拟器内的档案，复制到外部系统上。adb push &lt;local&gt; &lt;remote&gt; - copy file/dir to deviceadb pull &lt;remote&gt; &lt;local&gt; - copy file/dir from device 4 安卓安装包APK结构Android应用存在的实体形式是一个后缀为apk的安装包，例如“微信.apk” “QQ.apk”。将这个安装包放入到Android系统后，系统就可以启动运行它了。apk安装包实际上是一个zip压缩包。我们用解压软件可以将它解压，解压后可以看到如下图的文件结构和目录结构。 4.1 Dalvik字节码 classes.dexclasses.dex就是程序中java文件被编译后生成的字节码。字节码可以在Android系统的虚拟机（VM）运行。我们说的运行一个安卓程序，其实就是运行这个程序的字节码。 4.2 资源文件 res\res中存放的的这个应用会使用到的资源文件，例如字符串、图片、界面布局等等。它的目录结构与Android Studio中我们看到的项目工程的res目录一样。这里面的xml文件内容都是被编译器编译过的，实际它们上已经变成了二进制文件，不再是文本文件了。 4.3 额外资源 assetsasset目录下存放的是不会被编译器处理的文件，一般是一些资源性质的文件，这些文件放进去是什么样，被打包后还是什么样。需要注意的是，asset目录和res目录都可以存放资源，只是前者不被编译器处理，后者会被编译器再转化一次。 4.4 程序全局配置文件 AndroidManifest是被编译器处理过的文件，也是二进制文件，不再是文本文件。 4.5. 附加组件 libs\libs目录下存放的是APK使用的库文件－－so文件。so文件是c++或者c语言编写后通过编译器生成的。有的应用会使用到so文件，例如微信。使用so文件的应用会通过java，调用c++语言实现的功能。我们暂时把目光投放在纯Java开发应用上，以后再来讲解Java调用c++开发的方式。 因为不是所有的APK都会使用库文件。所以不会有libs目录。 4.6 编译后的二进制资源文件 resources.arscresources.arsc文件，用来描述那些具有ID值的资源的配置信息，它的内容就相当于是一个资源索引表。 4.7 证书文件 META-INF存放的是签名信息 4.8 AndroidManifest.xml该文件是每个应用都必须定义和包含的，它描述了应用的名字、版本、权限、引用的库文件等等信息。]]></content>
      <categories>
        <category>AndroidAPP</category>
      </categories>
      <tags>
        <tag>APP</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1 移动APP测试--环境搭建]]></title>
    <url>%2F2017%2F09%2F16%2FAndroidAPP%2F1%20%E7%A7%BB%E5%8A%A8APP%E6%B5%8B%E8%AF%95%E2%80%93%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[1 移动APP测试—环境搭建[toc] 1 安卓模拟器1.1 GenymotionGenymotion是一套完整的工具，它提供了Android虚拟环境。genymotion安卓模拟器其实不是模拟器。严格来说，genymotion是基于virtualbox的虚拟机。 1.2 部署安卓镜像 安装Genymotion默认路径：C:\Program Files\Genymobile\Genymotion配置ADB环境变量：C:\Program Files\Genymobile\Genymotion\tools 安装virtualbox 在线部署镜像 打开genymotion， 注册https://www.genymotion.com/account/create/ 邮箱验证后可登录 只有在登陆后才可按ADD下载镜像 离线部署 下载Genymotion的OVA格式镜像文件 通过virtualbox导入虚拟机，但不在这里打开 通过Genymotion打开虚拟机 第一次打开要允许ADB调试 2 ecshop网站虚拟环境部署2.1 ecmobile内网部署 把ECShop_V2.7.3_UTF8_release1106下upload中的所有文件拷贝到phpstudy的WWW目录下，把ecmobile目录拷贝到WWW目录中 在PC机C:\Windows\System32\drivers\etc的Hosts文件中，添加如下记录：127.0.0.1 shop.ecmobile.cn中间是TAB键入的空隙，不是空格键space。如此浏览器网址：localhost=127.0.0.1=shop.ecmobile.cn3、启动phpStudy服务2.2 fiddler代理设置tools-options中设置端口号为88882.3 安卓模拟器设置代理 打开WIFI代理设置改为手动 代理服务器主机名输入PC机IP地址（或10.0.3.2），端口设置为8888（同fiddler设置）并保存 打开手机模拟器上的ecmobile应用 在fiddler上即可查看ecmobile发送的请求2.4 恢复外网若想从内网切换到外网，则注释PC上的hosts文件中的127.0.0.1 shop.ecmobile.cn，再把手机模拟器中的wifi取消保存，接着重新连接wifi再打开ecmobile即可。 3 ecshop网站真实环境部署—内网穿透3.1 概念内网穿透即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，有时就会出现不支持内网穿透。就是说映射端口，能让外网的电脑找到处于内网的电脑，也叫反向代理。内网穿透的目的是：让外网能访问你本地的应用，例如在外网打开你本地http://127.0.0.1指向的Web站点。 3.2 ngrok开源项目3.2.1 简介ngrok是一个反向代理，通过在公共的端点和本地运行的Web服务器之间建立一个安全的通道。ngrok可捕获和分析所有通道上的流量，便于后期分析与响应。是github上的一个开源项目。 官网：https://ngrok.com/ 源码：https://github.com/inconshreveable/ngrok ngrok1.x开源，ngrok2.x不开源ngrok使用go语言开发，源代码分为客户端与服务器端。 3.2.2 国内常用网站 小米球：ngrok.ciqiuwl.cn IT Fun ：www.ittun.com Sunny-Ngrok：www.ngrok.cc3.2.3 Sunny-Ngrok使用 服务器端：注册登录 服务器端：建立隧道 服务器端：隧道管理记录下隧道的ID 客户端：登录隧道 客户端：记录IP地址]]></content>
      <categories>
        <category>AndroidAPP</category>
      </categories>
      <tags>
        <tag>APP</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS]]></title>
    <url>%2F2017%2F07%2F20%2FWEB%2FCSS%2F</url>
    <content type="text"><![CDATA[CSS1 概念CSS 指层叠样式表 (Cascading Style Sheets)CSS 是一种标记语言，不分大小写目的：维护方便，使网页丰富美观 2 三种显示方式2.1 外部样式表&lt;head&gt;&lt;link rel="stylesheet" type="text/css" href="*.css"/&gt;&lt;/head&gt; 2.2 内部样式表&lt;head&gt;&lt;style type="text/css"&gt; hr &#123;color: sienna;&#125; p &#123;margin-left: 20px;&#125; body &#123;background-image: url("*.gif");&#125;&lt;/style&gt;&lt;/head&gt; 2.3 行间样式表&lt;p style="color: sienna; margin-left: 20px"&gt;This is a paragraph&lt;/p&gt; 3 选择器3.1 id选择器 id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。 id 选择器以 “#” 来定义。 下面的两个 id 选择器，第一个可以定义元素的颜色为红色，第二个定义元素的颜色为绿色：#red &#123;color:red;&#125;#green &#123;color:green;&#125; 下面的 HTML 代码中， id 属性为 red 的 p 元素显示为红色，id 属性为 green 的 p 元素显示为绿色。&lt;p id="red"&gt;这个段落是红色。&lt;/p&gt;&lt;p id="green"&gt;这个段落是绿色。&lt;/p&gt; 注意：id 属性只能在每个 HTML 文档中出现一次。 3.2 类选择器 在 CSS 中，类选择器以一个点号显示.center &#123;text-align: center&#125; 所有拥有 center 类的 HTML 元素均为居中。 在下面的 HTML 代码中，h1 和 p 元素都有 center 类。这意味着两者都将遵守 “.center” 选择器中的规则。&lt;h1 class="center"&gt;This heading will be center-aligned&lt;/h1&gt;&lt;p class="center"&gt;This paragraph will also be center-aligned.&lt;/p&gt; 派生选择.classname p &#123;color:red;&#125; 4 推荐网站菜鸟教程http://www.runoob.com/css/css-tutorial.htmlW3schoolhttp://www.w3school.com.cn/css/css_selector_adjacent_sibling.asp]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP]]></title>
    <url>%2F2017%2F06%2F23%2FWEB%2FPHP%2F</url>
    <content type="text"><![CDATA[PHPphpstudy中的数据库起动phpstudy.exe，并开启服务，php文件都放在WWW文件夹中网址http://localhost/phpMyAdmin/账户root密码root接下来 新建数据库,命名为 login 新建表，命名为 login 名字，类型varchar，长度20 基础语法（默认主页）文件名index.php 点击图钉另存该文件网址 http://localhost/index.php&lt;html&gt; &lt;head&gt; &lt;title&gt;这是标题&lt;/title&gt; &lt;!--这是CSS样式头文件--&gt; &lt;style type="text/css"&gt; body &lt;!--body的样式--&gt; &#123; font-size:30px; &#125; &lt;/style&gt; &lt;/head&gt; &lt;!--PHP的定义标签,语句结束加分号;--&gt;&lt;?PHP //echo 可以输出字符串"" echo "你好"; //echo 可以&lt;p&gt;标签 echo "&lt;p style=color:blue;&gt;hello&lt;/p&gt;"; // 定义变量时增加美元符号$ $x= 2 ; $y= 3 ; $z= "PHP标签内的注释不用&lt;!-- --&gt;,用双//"; //定义函数 加法 function sum($m,$n) &#123; return $p=$m+$n; &#125; //定义函数 字符串和文字混合输出 function say($s) &#123; echo $s,"你该回家吃饭了"; &#125; //定义函数 计数（count是内置函数，不可直接重新定义） function counti() &#123; // 在使用位置声明全局变量 global global $y; //仅在第一次使用时赋值 static static $i=0; if($i &lt; $y) &#123;echo "&lt;/br&gt;",$i++;&#125; &#125; //定义数组 array() $A=array("小明","小红","小白"); //定义不完全的数组 $B=array(0=&gt;"零",3=&gt;"三"); ?&gt; &lt;body&gt; &lt;p style=color:red;&gt; BODY里面的php页面&lt;/p&gt; &lt;!--调用PHP时不用再加PHP--&gt; &lt;? // 输出z echo "&lt;/br&gt;",$z; //输出x+y=z echo "&lt;/br&gt;",$x,"X",$y,"=",$x*$y; //调用sum()函数计算5+6 echo "&lt;/br&gt;","5+6=",sum(5,6),"&lt;/br&gt;"; //调用say()函数，输出“小伙子，你该回家吃饭了” say("小伙子"); //调用counti()函数，当i&lt;y时可以输出i，此处输出3次 counti(); counti(); counti(); counti(); counti(); counti(); counti(); //输出数组A和数组B的值 echo "&lt;/br&gt;",$A[0],"&lt;/br&gt;",$A[1]; echo "&lt;/br&gt;",$B[0],"&lt;/br&gt;",$B[3]; ?&gt; &lt;!--表单的使用--&gt; &lt;form&gt; &lt;!--用户名、密码--&gt; 用户名：&lt;input type="text"&gt; &lt;/input&gt;&lt;/br&gt; 密 &amp;nbsp &amp;nbsp 码：&lt;input type="text"/&gt;&lt;/br&gt; &lt;!--按钮的三种写法--&gt; &lt;!--按钮input+button--&gt; &lt;input type="button"; value="input+button"/&gt;&lt;/br&gt; &lt;!--按钮input+submit--&gt; &lt;input type="submit"; value="input+submit"/&gt;&lt;/br&gt; &lt;!--按钮button--&gt; &lt;button &gt;button&lt;/button&gt;&lt;/br&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; 表单提交表单文件名form tijiao.php 点击图钉另存该文件网址 http://localhost/form%20tijiao.php&lt;html&gt; &lt;head&gt; &lt;title&gt;表单 提交&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;表单提交&lt;/h1&gt; &lt;!--文件跳转到下一个页面 --&gt; &lt;!--默认get，写post的话，地址栏看不到密码--&gt; &lt;form action="form jieshou.php" method="get"&gt; &lt;!--&lt;input&gt;标签结束的两种方式--&gt; 用户名：&lt;input type="text" name="username"&gt; &lt;/input&gt;&lt;/br&gt; 密码：&lt;input type="text" name="password"/&gt;&lt;/br&gt; &lt;!--提交按钮--&gt; &lt;input type="submit" value="登陆"/&gt;&lt;/br&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt; 接收表单form jieshou.php 点击图钉另存该文件&lt;html&gt; &lt;head&gt; &lt;title&gt;表单 接收&lt;/title&gt; &lt;style type="text/css"&gt; body &#123;font-size:35px;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;表单接收&lt;/h1&gt; &lt;!--h标题自动换行--&gt; &lt;p&gt;收到&lt;/p&gt;&lt;/br&gt; &lt;!--php调用开始--&gt; &lt;?php //,定义$x和$y给用户名和密码，方便调用 //获取 username，前一页定义的变量 echo "您的用户名是：",$x=$_GET['username'],"&lt;/br&gt;"; //获取 password，前一页定义的变量 echo "您的密码是：",$y=$_GET['password'],"&lt;/br&gt;"; //调用内置函数，启动session session_start(); //&lt;!--看前一页用的post还是get&gt; //将username的值赋给username2 $_SESSION['username2']=$_GET['username']; //启动cookie，将password的值赋给password2 //定义cookie有效时间，‘/’结束 setcookie("password2",$_GET['password'],time()+31536000,'/'); //输出内容 echo "您的session是：",$_SESSION['username2'],"&lt;/br&gt;"; echo "您的cookie是：",$_COOKIE['password2'],"&lt;/br&gt;"; //建立数据库连接‘$sql_t’--（本地，账户名，密码） $sql_t=mysql_connect("localhost","root","root"); //选择数据库（数据库名称，前一步建立的链接‘$sql_t’） //mysql_select_db(database,connection mysql_select_db("login",$sql_t); //定义：‘mysql插入语句--$str_q’， //数据库里'表的名称login，和之前的login命名重了 //INSERT INTO table_name (列1, 列2,...) VALUES (值1, 值2,....) //数据库中定义的键username，password， //值为本php文件中定义的$x和$y $str_q="insert into login (username,password) values ('$x','$y')"; //执行‘插入语句$str_q’， mysql_query($str_q);//调用php结束 ?&gt; &lt;/form&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript]]></title>
    <url>%2F2017%2F06%2F23%2FWEB%2FJavaScript%2F</url>
    <content type="text"><![CDATA[JavaScript[toc] 1 概念JavaScript 是一种轻量级的编程语言。JavaScript 是可插入 HTML 页面的编程代码。 2 实现-内部脚本HTML 中的脚本必须位于 &lt;script&gt;与&lt;/script&gt; 标签之间。脚本可被放置在 HTML 页面的&lt;body&gt;和 &lt;head&gt; 部分中。&lt;script type="txt/javascript"&gt;.....&lt;/script&gt; -外部脚本&lt;script src="myScript.js"&gt;&lt;/script&gt; 3 常用实例3.1 写入 HTML 输出document.write() document.write("&lt;p&gt;This is a paragraph&lt;/p&gt;"); 3.2 触发 HTML 弹窗alert()——在开始标签内添加&lt;button type="button" onclick="alert('Welcome!')"&gt;点击这里&lt;/button&gt; 3.3 改变 HTML 内容使用 JavaScript 来处理 HTML 内容x=document.getElementById("demo") //查找元素x.innerHTML="Hello JavaScript"; //改变内容，即两个&lt;&gt;内容&lt;&gt; 3.4 改变 HTML 图像点击灯泡就可以打开或关闭这盏灯&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;body&gt; &lt;script&gt; function changeImage() &#123; element=document.getElementById('myimage') if (element.src.match("bulbon")) &#123;element.src="eg_bulboff.gif";&#125; else &#123;element.src="eg_bulbon.gif";&#125; &#125; &lt;/script&gt; &lt;img id="myimage" onclick="changeImage()" src="eg_bulboff.gif"&gt; &lt;p&gt;点击灯泡来点亮或熄灭这盏灯&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 3.5 改变 HTML 样式改变 HTML 元素的样式，属于改变 HTML 属性的变种。x=document.getElementById("demo") //找到元素x.style.color="#ff0000"; //改变样式 3.6 验证输入JavaScript 常用于验证用户的输入if isNaN(x) &#123;alert("Not Numeric")&#125;; 4 推荐网址菜鸟教程http://www.runoob.com/js/js-tutorial.htmlW3schoolhttp://www.w3school.com.cn/js/js_intro.asp]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML]]></title>
    <url>%2F2017%2F06%2F23%2FWEB%2FHTML%2F</url>
    <content type="text"><![CDATA[HTML[toc] 1 概念 HTML指的是超文本标记语言 (Hyper Text Markup Language) HTML 使用标记标签来描述网页 HTML 文档由成对的、嵌套的 HTML 标签构成。 HTML 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。 例如&lt;p&gt;元素、&lt;body&gt;元素、&lt;html&gt;元素 、 &lt;/br&gt;换行、&lt;hr&gt;水平线、&lt;div&gt;块、~~&lt;head&gt;内可以包含的元素:&lt;title&gt;、&lt;base&gt;、&lt;link&gt;、&lt;meta&gt;、&lt;script&gt;以及&lt;style type=&quot;text/css&quot;&gt; HTML 标签的属性总是在 HTML 元素的开始标签中规定例如 &lt;h1 align="center"&gt; 拥有关于对齐方式的附加信息。align="center" 即为属性 在标签中增加 name、class、value等都是给标签增加属性。 2 常用标签2.1 标题—HHTML 标题（Heading）是通过 &lt;h1&gt; - &lt;h6&gt; 等标签进行定义的。&lt;h2&gt;This is heading 2&lt;/h2&gt;&lt;h4&gt;This is heading 4&lt;/h4&gt;&lt;h6&gt;This is heading 6&lt;/h6&gt; This is heading 2 This is heading 4 This is heading 6 2.2 段落—PHTML 段落是通过 &lt;p&gt;标签进行定义的 &lt;p&gt;这是段落。&lt;/p&gt;&lt;p&gt;这是段落。&lt;/p&gt;&lt;p&gt;这是段落。&lt;/p&gt;&lt;p&gt;段落元素由 p 标签定义。&lt;/p&gt; 这是段落。 这是段落。 这是段落。 段落元素由 p 标签定义。 2.3 链接—AHTML 链接是通过&lt;a&gt; 标签进行定义的。 &lt;a href="http://www.baidu.com"&gt;This is a link&lt;/a&gt;``` &lt;a href="http://www.baicu.com"&gt;Visit BAIDU&lt;/a&gt;&lt;/br&gt;使用 Target 属性，你可以定义被链接的文档在何处显示。下面的这行会在新窗口打开文档：```htmlbars&lt;a href="http://www.baidu.com" target="_blank"&gt;Visit BAIDU!&lt;/a&gt; 2.4 图像—IMGHTML 图像是通过 &lt;img&gt; 标签进行定义的。&lt;img src="" /&gt; 把图像作为链接来使用：&lt;a href="http://"&gt;&lt;img border="0" src=" " /&gt; 2.5 注释—!—&lt;!-- This is a comment --&gt; 2.6 文本格式&lt;b&gt; 定义粗体文本。 定义大号字。&lt;i&gt; 定义斜体字。 定义小号字。&lt;strong&gt; 定义加重语气。&lt;del&gt; 定义删除字。 定义粗体文本。 定义大号字。 定义斜体字。 定义小号字。 定义加重语气。 定义删除字。&lt;p&gt;一打有 &lt;del&gt;二十&lt;/del&gt; &lt;ins&gt;十二&lt;/ins&gt; 件。&lt;/p&gt; 一打有 二十 十二 件。 2.7 表格—TABLE-TR-TH-TD表格由&lt;table&gt; 标签来定义。每个表格均有若干行（由&lt;tr&gt;标签定义），每行被分割为若干单元格（由&lt;td&gt; 标签定义）。&lt;th&gt;Heading&lt;/th&gt;表头，&lt;table border=&quot;2&quot;&gt;边框&lt;table border="2"&gt; &lt;tr&gt; &lt;th&gt;Heading1&lt;/th&gt; &lt;th&gt;Heading2&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt;&lt;td&gt;row 1, cell 1&lt;/td&gt; &lt;td&gt;row 1, cell 2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;&lt;td&gt;row 2, cell 1&lt;/td&gt; &lt;td&gt;row 2, cell 2&lt;/td&gt; &lt;/tr&gt; Heading1 Heading2 row 1, cell 1 row 1, cell 2 row 2, cell 1 row 2, cell 2 2.8 列表2.8.1 无序—UL&lt;ul&gt; &lt;li&gt;苹果&lt;/li&gt; &lt;li&gt;桔子&lt;/li&gt; &lt;li&gt;桃&lt;/li&gt;&lt;/ul&gt; 苹果 桔子 桃 2.8.2 有序—OL&lt;ol&gt; &lt;li&gt;打开冰箱门&lt;/li&gt; &lt;li&gt;把大象赶进去&lt;/li&gt; &lt;li&gt;关上冰箱门&lt;/li&gt;&lt;/ol&gt; 打开冰箱门 把大象赶进去 关上冰箱门 2.9 框架通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面&lt;frameset rows="15%,*"&gt; &lt;frame src="top.html" name=top&gt; &lt;frameset cols="3*,2*"&gt; &lt;frame src="left.html" name=left&gt; &lt;frame src="middle.html" name=middle&gt; &lt;frame src="right.html" name=right&gt; &lt;/frameset&gt;&lt;/frameset&gt; 3 常用术语和符号背景颜色（Bgcolor）、背景（Background）空格（&amp;nbsp;） 4推荐网址菜鸟教程http://www.runoob.com/html/html-tutorial.htmlW3schoolhttp://www.w3school.com.cn/html/index.asp]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web测试的维度]]></title>
    <url>%2F2017%2F06%2F23%2FWEB%2FWeb%20%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[Web 测试[toc] 1 对比传统测试1.1 相同点-测试内容：功能、性能、易用性、兼容性、安全性等-测试方法：因果图法、边界值法、场景法等-测试手段：人工测试、工具测试、评估等 1.2 不同点-Web测试更加注重性能测试和安全性测试 Col1 传统测试 Web测试 性能测试 cpu、内存等系统资源使用情况 事物响应速度；系统处理能力（TPS）最大并发数； 安全性测试 用户管理；系统是否有超时限制；相关信息是否写入日志文件；是否可以追踪；服务器安全漏洞；信息是否加密等 XSS攻击；缓冲区溢出；SQL注入；拒绝服务等 1.3 Web评价角度 软件是否正确实现了需求规格说明书中明确定义的需求。 软件是否遗漏了需求规格说明书中明确定义的需求。 软件是否将需求规格说明书中未定义的需求实现。 软件是否对异常情况进行了处理，容错性好。 软件是否满足用户的使用需求。 2 链接测试-该链接将用户带到它所说明的地方。正确性-被链接页面是存在的。-保证Web应用系统上没有孤立的页面，所谓孤立页面是指没有链接指向该页面。 链接测试工具：Linkbot、Xenu 3 表单测试原因无法考虑所有用户输入的可能性测试角度 输入框长度限制 输入框的类型限制（只能输入数值、字母……） 输入模式匹配（只能输入日期格式） 按钮做了自己该做的事（没把密码再显示处理）4 Cookie测试Cookies是当你浏览某网站时，由Web服务器置于你硬盘上的一个非常小的文本文件它可以记录你的用户ID、密码、浏览过的网页、停留的时间等信息。硬盘中的Cookies文件可以被Web浏览器读取，它的命令格式为：用户名@网站地址[数字].txt。测试角度-Cookies是否起作用-是否按预定的时间进行保存-刷新对Cookies有什么影响等-关键信息是否保密5 文件上传测试-只能上传允许的附件类型。-不能上传脚本或可执行文件。-不能单纯以后缀名来判断文件类型，在服务器端对文件类型用二进制文件头进行判断。-浏览好文件后，将目标文件删除这种异常情况可以正常处理。-上传超大文件时可以正常处理，比如给出提示信息等。-上传的文件应该提供接口查看。-上传的文件不应该直接保存于数据库中-文件上传到服务器端后应该被重命名，防止文件名冲突。6 数据库测试数据一致性错误：没有条件限制或回滚功能，错误的记录被保存下来输出错误：数据源是正确的，但是由于数据传输或在程序设计中数据提取和操作的指令问题。上面两种错误在基于黑盒的表单测试下错误现象是一样的，所以需要进一步确定问题是否是数据库错误测试角度 数据表结构是否合理 表与表之间关系、主外键是否合理 列的类型和长度定义是否满足功能和性能 索引创建是否合理 存储过程是否功能完整7 易用性测试（可用性）没有确定的手段和预期结果 测试角度 明确最终用户服务器端用户、客户端用户 图形测试图片的大小和显示 辅助功能测试使用说明、导航、站点地图、帮助等 页面导航直观 区域文化美国人的日期显示通常为MM/DD/YYYY 其他不要出现水平滚动条。重要信息或大纲级的内容需高亮显示使用不同大小字体，以免找不到重点。 8 性能测试负载测试关注的是不同负载水平的系统的性能指标。为了得到压力数确定下的性能指数。例如我们可以找到系统的最大用户数和最佳用户数压力测试则是关注在超高负载（超过系统最大用户数）的情况下，系统是否还能稳定处理 9 兼容性测试 WEB服务器的版本 数据库的连接 浏览器的配置测试 操作系统 浏览器 插件和脚本 服务器平台：统一软件的事不同服务器版本客户端平台：浏览器版本的兼容性和硬件平台 10 安全性测试没有完全的安全性测试 认证与授权认证：认出用户是谁授权：决定用户能做什么认证 多因素认证更安全，但用户体验下降 session验证：避免用户zh接输入URL进行访问，绕开验证 避免用户暴力破解：登录失败时不告诉用户是密码还是账户错误 验证码：避免使用工具发送数据包。图片验证码被认为是目前最有效的 登陆失败后的限制策略 策略—密码经过不可逆的加密后保存在数据库中—长度&amp;复杂度文件上传漏洞 授权 权限只能由管理员来控制 不同模块具有不同权限cookie和session具有控制功能的数据不能保存在cookie中SQL 注入定义：利用现有应用程序，将(恶意)的SQL命令注入到后台数据库引擎执行的能力。在用户名输入框中输入:’or 1=1# 密码随便输入，这时候的合成后的SQL查询语句为：select * from users where username='' or 1=1#' and password=md5('')等价于：select * from users where username='' or 1=1进而等价于：select * from users 注入防治 校验用户输入 不使用动态拼装 不使用管理员权限进行数据库连接 不把机密信息直接存放,要加密 应用异常的信息给出尽可能少的提示 将服务器设置自动将单引号和双引号转译 辅助软件--appscan（IBM生产） XSS 跨站攻击跨站脚本攻击Cross Site Scripting 指利用网站漏洞从用户那里恶意盗取信息 本质：对html的注入攻击 DDoS拒绝服务攻击DoS（Denial of Service)利用大量的虚假请求或电子邮件信息攻击服务器，致使服务器无法正常处理提交的合法请求。SYN (Synchronize Denial of Service )攻击耗完可用的TCP连接，利用“三次握手”的原理来实现攻击的目的。SYN Flood、xdos、独裁者 唯一的办法只有使用硬件防火墙，它从物理线路上直接过滤掉虚假的SYN数据包]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>Web</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黑盒测试方法]]></title>
    <url>%2F2017%2F06%2F23%2FBlackBbox%2F%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[黑盒测试方法1 等价类划分把所有可能的输入数据,即程序的输入域划分成若干子集,然后从每一个子集中选取少数具有代表性的数据作为测试用例。 规定取值范围或值的个数的情况下,可以确立一个有效等价类和两个无效等价类。 输入条件是一个布尔量(真假)的情况下,可确定一个有效等价类和一个无效等价类。 在规定了输入数据的一组值（假定n个）,可确立n个有效等价类和一个无效等价类。 在规定了输入数据必须遵守的规则的情况下,可确立一个有效等价类（符合规则）和若干个无效等价类（从不同角度违反规则）； 原则 为每一个等价类规定一个唯一编号； 设计一个新的测试用例,使其尽可能多地覆盖尚未被覆盖地有效等价类,重复这一步，直到覆盖所有有效等价类； 设计一个新的测试用例,使其仅覆盖一个尚未被覆盖的无效等价类,重复这一步，直到所有的无效等价类都被覆盖为止。例子某城市的电话号码由三部分组成.这三部分的名称和内容分别是： 地区码：空白或3位数字； 前缀：非’0’或’1’开头的三位数； 后缀：四位数字。假定被调试的程序能接受一切符合上述规定的电话号码,拒绝所有不符合规定的号码.试进行等价类划分和测试用例设计。 条件 有效等价 无效等价 地区编码 空白;三位数字 000&lt;=x&lt;=999 含字符三位数;纯数字位数a3 前缀 三位数字： 200&lt; y &lt;999 含字符三位数;纯数字000&lt;=y&lt;=199 后缀 四位数字 0000&lt;=z&lt;9999 含字符;,空白多余4位数少于4位数 2 边界值分析边界值分析法就是对输入或输出的边界值进行测试的一种黑盒测试方法。通常边界值分析法是作为对等价类划分法的补充。 上点：边界值上的点 内点：在域的范围内的一点 离点：离上点最近的点（开内闭外） 原则内部取值mid，上边界值max，下边界值min，开内，闭外的值例子求开区间（10,30），闭区间[20,40]，半开半闭区间(30,50]和[30,50)的测试用例。 （10,30） [20,40] (30,50] [30,50) 10,30 20,40 30,50 30,50 20 30 40 40 11,29 19,41 31,51 29,49 10,11,20,29,30 19,20,30,40,41 30,31,40,50,51 29,30,40,49,50 3 正交试验设计依据Galois理论,从大量的数据中挑选适量的,有代表性的点,从而合理地安排测试。步骤 确定试验因素及水平数; 选用合适的正交表; 列出试验方案及试验结果; 工具正交设计助手 打开软件，首先点击工具栏的“文件 –&gt; 新建工程”创建一个新的工程。这里在创建工程的时候无法直接定义工程的名字，而是需要建好之后通过“修改名称”来完成 创建一个实验，点击”实验 –&gt; 新建实验“来完成，依次填写实验说明，选择正交表，因素与水平。 点击设计向导对话框上的”确定“按钮之后，测试用例就会自动生成在主页面上 测试用例已经自动生成了，需要筛选掉绝对不存在的情况。 4 状态迁移例子1 分析需求片段，找出所有状态以及状态之间的跳转条件状态：就绪，打印，故障，缺纸跳转条件：打印指令，出现故障，故障修复，缺纸 ，放入纸张，打印完毕 就绪—-打印—-就绪 就绪—-打印—-故障—-打印—-就绪 就绪—-打印—-缺纸—-打印—-就绪 例子2 电梯是典型的利用状态迁移法测试状态：停在一楼、上升、下降、空闲、直接去一楼指令：楼层、指定层&gt;空闲层，指定层=空闲层，指定层&lt;当前层 停在一层——停在一层 停在一层——上升——-空闲——上升 停在一层——上升——-空闲——空闲 停在一层——上升——-空闲——下降——-空闲 停在一层——上升——-空闲——-停在一层 5 判定表判定表是分析和表达多逻辑条件下执行不同操作的情况的工具。能够将复杂的问题按照各种可能的情况全部列举出来，简明并避免遗漏。因此，利用判定表能够设计出完整的测试用例集合。 步骤 条件桩（Condition Stub）：列出了问题得所有条件。 动作桩（Action Stub）：列出了问题规定可能采取的操作。 条件项（Condition Entry）：列出针对它条件的取值。在所有可能情况下的真假值。 动作项（Action Entry）：列出在条件项的各种取值情况下应该采取的动作。 举例货运站收运费：本省的，快件每公斤5元，慢件每公斤3元；外省的，不超过20公斤时：慢件每公斤5元快件每公斤7元超过20公斤时：慢件每公斤7元，快件每公斤9元。 条件桩 条件桩 情况1 情况2 情况3 情况4 情况5 情况6 情况7 情况8 是本省的 y y y n n n y n 是快件 y y n y n y n n 是不超重的 y n y y y n n n 动作桩 动作桩 情况1 情况2 情况3 情况4 情况5 情况6 情况7 情况8 3元/公斤 v 5元/公斤 v v v 7元/公斤 v v v 9元/公斤 v]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[6 Centos7+JDK1.8+Tomcat9本地RPM安装]]></title>
    <url>%2F2017%2F06%2F10%2FLinux%2F6%20Centos7%2BJDK1.8%2BTomcat9%E6%9C%AC%E5%9C%B0RPM%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[6 Centos7+JDK1.8+Tomcat9本地RPM安装0 材料 centos7 minimal最小安装无界面(桥接网卡) SSH工具-XShell FTP工具-WinSCP jdk1.8的rpm包 tomcat9的zip包 1 JDK 下载(约170MB)http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 拷贝WinSCP用root账号连接虚拟机将JDK.rpm拷贝至/home 安装XShell连接虚拟机 su rootcd /cd homerpm -ivh jdk...TAB补全 环境变量jdk安装在路径/usr/java/jdk1.8.0_161在WinSCP商打开etc/profile文件,末尾添加 export JAVA_HOME=/usr/java/jdk1.8.0_161export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/bin 重载profle文件并验证source /etc/profilejava -version 2 tomcat 下载(约9MB)https://tomcat.apache.org/download-90.cgi 解压在win下解压好,重命名整个文件夹为tomcat 拷贝和赋权用WinSCP将解压好的tomcat文件夹拷贝至usr/share此时tomcat路径为usr/share/tomcat赋权: 在路径usr/share下,执行chmod 777 -R tomcat 开启服务进入usr/share/tomcat/bin 执行./catalina.sh./startup.sh 开启防火墙端口firewall-cmd --zone=public --add-port=8080/tcp --permanentfirewall-cmd --reload 验证windows下浏览器输入虚拟机IP:8080 3 配置tomcat开机启动 setenv.sh 配置windows下记事本新建setenv.sh文件,拷贝至在tomca/bin 目录下内容为 #add tomcat pidCATALINA_PID="$CATALINA_BASE/tomcat.pid"#add java optsJAVA_OPTS="-server -XX:PermSize=256M -XX:MaxPermSize=1024m -Xms512M -Xmx1024M -XX:MaxNewSize=256m" 增加tomcat.servicewindows下记事本新建tomcat.service文件,拷贝至/usr/lib/systemd/system目录下内容为 Description=tomcatAfter=syslog.target network.target remote-fs.target nss-lookup.target[Service]Type=forking# tomcat的路径PIDFile=/usr/share/tomcat/tomcat.pidExecStart=/usr/share/tomcat/bin/startup.shExecStop=/bin/kill -s QUIT $MAINPIDExecReload=/bin/kill -s HUP $MAINPIDPrivateTmp=true[Install]WantedBy=multi-user.target 注: [unit]配置了服务的描述，规定在network启动之后执行， [service]配置服务的pid，服务的启动，停止，重启 [install]配置了使用用户在启动的时候会在tomcat的根目录下生产tomcat.pid文件，停止后删除 systemctl命令开机启动systemctl enable tomcat 重启虚拟机验证重启后,在win下浏览器打开网页,证明开启激动配置成功 4 搭建动态web网站5 apache和tomcat的区别联系 apache是web服务器，tomcat是应用（java）服务器，它只是一个servlet(jsp也翻译成servlet)容器，可以认为是apache的扩展。 apache和tomcat都可以做为独立的web服务器来运行。但是apache不能解释java程序（jsp,serverlet） Apache是普通服务器，本身只支持html即普通网页。不过可以通过插件支持PHP,还可以与Tomcat连通(单向Apache连接Tomcat,就是说通过Apache可以访问Tomcat资源。反之不然) 两者都是一种容器，只不过发布的东西不同。apache是html容器，功能像IIS一样，tomcat是jsp/servlet容器，用于发布JSP及JAVA的，类似的有IBM的webshere、EBA的Weblogic，sun的JRun等 apache和tomcat是独立的，在通一台服务器上可以集成]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5 远程搭建CentOS的SVN服务器]]></title>
    <url>%2F2017%2F06%2F10%2FLinux%2F5%20%E8%BF%9C%E7%A8%8B%E6%90%AD%E5%BB%BACentOS%E7%9A%84SVN%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[5 远程搭建CentOS的SVN服务器@(07 lunix基础) [toc] 1 安装1.1 在centos下 使用root权限 su - 清空yum工具现在的活动rm -rf /var/run/yum.pid 安装svnyum install subversion -y 验证安装svnserve --version 1.2 在ubuntu下sudo apt-get install subversion 2 部署2.1 创建版本库 把版本库放在了var下的svn文件夹mkdir /var/svn 创建一个名为P1的版本库svnadmin create /var/svn/P1 2.2 配置版本库 进入并查看第2步创建内容cd /var/svn/P1 #进入tree #查看 或者 ls 或者ls -l有以下几个文件conf db format hooks locks README.txt 进入conf，并修改conf内的三个文件 svnserve.conf： svn服务综合配置文件，只需要更改5行。passwd： 用户名口令文件。前边是svn账号，后边是密码，密码是明文存储。配置哪些用户可以授权使用，里边包含用户名和密码。authz： 权限配置文件。 2.2.1 svnserve.confvi svnserve.conf打开下面的几个注释：[general]anon-access = read #匿名用户可读auth-access = write #授权用户可写password-db = passwd #使用哪个文件作为账号文件authz-db = authz #使用哪个文件作为权限文件realm = P1 #认证空间名，版本库所在目录 保存退出：ESC+shift+;调出控制台，在冒号后输入wq，回车 2.2.2 passwd[users]wangdong = 1 前边是svn账号，后边是密码，等号左右加空格 2.2.3 authz[/]wangdong = rw 2.3 关闭防火墙（重启系统后恢复）查看防火墙状态systemctl status firewalld.service关闭防火墙systemctl stop firewalld.service 2.4 启动svn服务（重启系统后关闭）关闭所有svn服务pkill svnserve打开var/svn下的svn服务svnserve -d -r /var/svn查看是否启动成功，监听3690端口netstat -antp |grep svnserve 2.5 测试 在本机linux下用terminal测试桌面新建文件夹test，在文件夹内右键打开terminalsvn co SVN://localhost/P1输入linux密码，svn账户和密码，选择是否保存密码后，导出。 在另一台电脑windows下用tortoiseSVN测试checkoutsvn://172.31.133.98/P1 3 后续长期使用优化 3.1 开机启动配置systemctl enable svnserve centos7废除以往的开机启动配置，只有在 var/svn内的仓库可以被开机启动 3.2 防火墙添加端口 开启防火墙systemctl start firewalld.service 查看防火墙状态systemctl status firewalld.service 获取root权限su - 添加新端口3690firewall-cmd --zone=public --add-port=3690/tcp --permanent 提交改变firewall-cmd --reload 3.3 丰富三个配置文件的内容和权限未完待续 4 apache搭建远程图形化服务器管理未完待续]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4 LAMP建站之centos7+wordpress]]></title>
    <url>%2F2017%2F06%2F10%2FLinux%2F4%20LAMP%E5%BB%BA%E7%AB%99%E4%B9%8Bcentos7%2Bwordpress%2F</url>
    <content type="text"><![CDATA[4 LAMP建站之centos7+wordpress@(07 lunix基础) [toc] 0 环境需求 LAMP服务器系统(Linux、Apache、MySQL、PHP)服务器操作系统：CentOS7博客部署服务器：Apache后台语言：PHP数据库：MySql5.7前端框架：WordPress3.9工具：SSH工具Xshell、FTP工具WinSCP 1 部署环境 安装mysql不解释，也可以用mariaDB代替 安装phpcentos完整安装可能自带了yum -y install php或yum -y install php*或yum -y --skip-broken install php*或yum install php php-mysql php-fpm php-gd 安装apache（ httpd）centos精简安装可能都自带了yum install httpd或yum -y install httpd* 下载wordpresshttp://cn.wordpress.org/wordpress-3.9-zh_CN.zip2 配置服务2.1 MySql数据库配置 创建博客专用账号允许任何IP使用：@&#39;%&#39;账号：blog密码：blogmysql&gt;CREATE USER &#39;blog&#39;@&#39;%&#39;IDENTIFIED BY &#39;blog&#39;; 创建专用数据库 wordpressmysql&gt;CREATE DATABASE wordpress; 将数据库wordpress所有权限赋给用户blogmysql&gt; GRANT ALL PRIVILEGES ON wordpress.* TO &#39;blog&#39;@&#39;%&#39; IDENTIFIED BY &#39;blog&#39;; 刷新权限mysql&gt; FLUSH PRIVILEGES; 2.2 Apache Httpd配置1. 测试 浏览器输入localhost查看是否安装成功 2. 更改apache端口非必要，一般不用改 如果想改变http服务的网站默认路径及端口，请修改httpd.conf 用vim打开httpd.confvim /etc/httpd/conf/httpd.conf 修改监听端口Listen 80 -&gt; Listen xxxx 网页存放位置使用vim全局替换/var/www为新设置的目录/abc/www,在vim命令模式下输入： 替换命令的语法如下：s / old / new / g shell&gt;s /var/www / abc/www / g(我空格位置好像不对。。。) 3. 启用httpd的url重写☆☆后文中还有2颗，集齐3颗星星支持伪静态博客 打开httpd.conf文件，修改新设置的一：Apache中的rewrite模块没有开启，去除这一行前面的#号就可以了 LoadModule rewrite_module modules/mod_rewrite.so 二：`AllowOverride Not Enabled；服务器可能没打开AllowOverride。如果httpd.config的AllowOverride设置的是None，那.htaccess将被忽略。找到以下2处位置并修改（All要复制文章中的字幕，编码不一样。。。）：&lt;Directory /&gt;Options FollowSymLinksAllowOverride All #这里&lt;/Directory&gt; &lt;Directory /var/www/html&gt;# … other directives…AllowOverride All #这里&lt;/Directory&gt; 修改完成后，要重启Apache才能生效。 service httpd restart 2.3 PHP配置 非必要 测试 PHP是否安装成功建立一个info.php文件：sudo vim /var/www/html/info.php然后输入 i 进入编辑模式，在文件中写入下面的 PHP命令：&lt;?phpphpinfo();?&gt; :wq保存退出 浏览器验证localhost/info.php 注：PHP并不需要额外配置，如果后面出现“PHP似乎没有安装运行WordPress所必需的MySQL扩展”，请注意确认php-mysql是否安装正确。 php-mysql安装了也不行，可以卸载后尝试php-mysqlnd的扩展连接yum remove php-mysqlyum install php-mysqlnd 2.4 WordPress配置我是在windows下配置好，通过FTP工具直接传送的，简单！ 将wordpress.zip解压重命名wordpress为blog 配置wp-config.php找到blog根文件夹下的wp-config-sample.php将其重命名为wp-config.php，用编辑器修改 define(‘DB_NAME', ‘wordpress'); /** MySQL数据库名：wordpress */define(‘DB_USER', ‘blog'); /** MySQL数据库用户名 :blog */define(‘DB_PASSWORD', ‘blog'); /** MySQL数据库密码 :blog */define(‘DB_HOST', ‘localhost'); /** MySQL主机（不用修改） */ 配置静态url文件支持☆根目录下新建.htaccess，复制黏贴 &lt;IfModule mod_rewrite.c&gt;RewriteEngine OnRewriteBase /RewriteRule ^index\.php$ – [L]RewriteCond %&#123;REQUEST_FILENAME&#125; !-fRewriteCond %&#123;REQUEST_FILENAME&#125; !-dRewriteRule . /index.php [L] &lt;/IfModule&gt; 配置wp-config.php文件权限 找到/** WordPress目录的绝对路径。 */if ( !defined('ABSPATH') ) define('ABSPATH', dirname(__FILE__) . '/');``` 在后面添加 define(‘WP_TEMP_DIR’, ABSPATH.’wp-content/tmp’);define(“FS_METHOD”, “direct”);define(“FS_CHMOD_DIR”, 0777);define(“FS_CHMOD_FILE”, 0777);``` 复制blog文件夹到/var/www/html!!! 这个FTP账号要用root账号登录 赋权chmod 777 -R /var/www/html/blog 3 配置Blog3.1 启动服务（如果启动了，在配置完成后要重启）systemctl restart mysqldsystemctl restart httpd 3.2 关闭防火墙systemctl stop firewalld.service 3.3 安装wordpress 打开浏览器输入虚拟机内：localhost/blog虚拟机外：虚拟机IP/blog 配合前文中的伪静态支持☆设置 —-固定连接—-常用设置—-第一个默认的朴素 4 后续配置4.1 开机启动配置mysql5.7、Apache二者的开机启动 mysqlsystemctl enable mysqld Apache的systemctl enable httpd.service 重载所有系统配置systemctl daemon-reload4.2 开启对应的防火墙端口 配置端口（apache的80端口）firewall-cmd --add-port=80/tcp --permanent 重启防火墙生效systemctl restart firewalld.service4.3 伪静态支持集齐文章中的三颗☆]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3 CentOS7X64的MySQL5.7（RPM安装）]]></title>
    <url>%2F2017%2F06%2F10%2FLinux%2F3%20CentOS7X64%E7%9A%84MySQL5.7%EF%BC%88RPM%E5%AE%89%E8%A3%85%EF%BC%89%2F</url>
    <content type="text"><![CDATA[3 CentOS7X64的MySQL5.7（RPM安装）@(07 lunix基础) [toc] 1 文件准备1.1 下载 网址：https://dev.mysql.com/downloads/mysql/ 文件（共200MB）： 01mysql-community-common-5.7.19-1.el6.x86_64.rpm 02mysql-community-libs-5.7.19-1.el6.x86_64.rpm 03mysql-community-client-5.7.19-1.el6.x86_64.rpm 04mysql-community-server-5.7.19-1.el6.x86_64.rpm 1.2 拷贝至CentOS7 FTP工具：SecureFX 7.2、WinSCP 拷贝文件至/home/用户名/downloads，或者任意自己能找到的目录 在名字前面增加序号，方便tab补全 2 远程安装 SSH工具：SecureCRT、Xshell sudo权限操作su - 进入目录cd /cd home/用户名/Downloads (前面拷贝文件的目录) 依次安装按照以下顺序进行安装，因为它们之间存在依赖关系common —&gt; libs —&gt; clients —&gt; server rpm -ivh 01。。common。tab补全 rpm -ivh 02。。libs。。tab补全 rpm -ivh 03。。client。tab补全 rpm -ivh 04。。server。tab补全 冲突解决可能和已安装有冲突（conflict），卸载之比如mariadb用 rpm -e mariadb（TAB补全） 卸载3 配置本地登录localhost3.1 开机启动 启动mysqlsystemctl start mysqld 查看状态systemctl status mysqld 设置开机启动：systemctl enable mysqld 重载所有系统配置systemctl daemon-reload3.2 首次登录修改 初始化数据库mysqld --initialize 查看一次性root密码grep &#39;temporary password&#39; /var/log/mysqld.log 第一次登陆mysql -u root -p 第一次更改密码为Qwert@12大小写特殊符号和数字都有ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;Qwert@12&#39;;3.3 修改密码策略 配置my.cnf文件在/etc/my.cnf文件添加validate_password_policy配置，指定密码策略shell&gt;vi /etc/my.cnf添加 [mysqld]default_password_lifetime=0 # 密码不过期validate_password=off # 密码策略关闭character_set_server=utf8 # 默认utf-8init_connect='SET NAMES utf8' 再次更改简单密码为rootALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;root&#39;; 重启mysql的三种命令service mysqld restartsystemctl restart mysqldsystemctl restart mysqld.service4 远程登录4.1 添加远程登录账号默认只允许root帐户在本地（localhost）登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户 添加允许任何IP的用户%GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;root&#39; WITH GRANT OPTION; 添加允许单一IP的用户172.31.133.128GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;172.31.133.128&#39; IDENTIFIED BY &#39;root&#39; WITH GRANT OPTION; 刷新权限mysql&gt;flush privileges;4.2 配置防火墙端口 测试时：禁止防火墙（临时）systemctl stop firewalld.service 永久打开3306端口firewall-cmd --add-port=3306/tcp --permanent 5 附录5.1 mysql5.7的密码策略mysql5.7默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含： 大小写字母、 数字和特殊符号， 长度不能少于8位。 否则会提示ERROR 1819 (HY000): Your password does not satisfy the current policy requirements错误，如下图所示：通过msyql环境变量可以查看密码策略的相关信息：mysql&gt; show variables like &#39;%password%&#39;;翻译如下： validate_password_policy：密码策略，默认为MEDIUM策略 validate_password_dictionary_file：密码策略文件，策略为STRONG才需要 validate_password_length：密码最少长度 validate_password_mixed_case_count：大小写字符长度，至少1个 validate_password_number_count ：数字至少1个 validate_password_special_char_count：特殊字符至少1个 取消密码策略前 取消密码策略后，只剩下 5.2 mysql编码规则msyql&gt; show variables like &#39;%character%&#39;; 5.3 mysql查看登录权限账户信息存储在database之mysql里面，所以mysql&gt;use mysqlmysql&gt;SELECT User,Host FROM user; 5.4 mysql默认文件存储路径 配置文件：/etc/my.cnf 日志文件：/var/log//var/log/mysqld.log 服务启动脚本：/usr/lib/systemd/system/mysqld.service socket文件：/var/run/mysqld/mysqld.pid]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2 Linux基础操作]]></title>
    <url>%2F2017%2F06%2F10%2FLinux%2F2%20Linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[2 Linux基础操作@(07 lunix基础) [TOC] 1 切换用户切换用户为wd(普通用户)su wd切换用户为rootsu -直接切换登录本机的用户exit 2 文件和目录操作快捷小操作 清屏命令clear或者 ctrl+l 上下键在命令行下通过上下键能选择之前用过的历史命令，方便需要重复执行的命令。 Tab键只需输入文件或目录名的前几个字符，然后按TAB键，如无相重的，完整的文件名立即自动在命令行出现如有重复的，第二次按TAB列出列表 2.01 我在哪 pwd显示当前所在的目录，工作路径语法：pwd 相对路径和绝对路径相对路径.目录表示当前目录..目录表示当前目录的上一层目录绝对路径/ 的都是绝对路径 2.02 显示列表 ls和treels查看目录中的文件-a：显示所有文件和目录，包含隐藏文件和目录-A：显示所有文件和目录，包括隐藏文件和目录，但不显示“.”和“..”目录-t：根据时间排序-l：显示文件和目录的完整属性信息。 颜色含义 文件类型 蓝色→目录绿色→可执行文件红色→压缩文件青色→链接文件灰色→其它文件 - 代表普通文件 d directory 目录文件 l link 链接文件 b block 块设备文件 ccharactor 字符设备文件 p pipe 管道文件 treesudo yum install tree 2.03 文件路径 cd change directory的缩写 作用：改变当前路径比如需要进入根目录下的etc目录，用绝对路径的表示方法是：cd /etc如果当前在/root目录下，转到etc目录下，用相对路径表示是：cd ../etccd /home进入 ‘/ home’ 目录’cd ..返回上一级目录cd ../..返回上两级目录cd进入个人的主目录cd ~ 进入个人的主目录cd -返回上次所在的目录cd /返回根目录 2.04 创建目录 mkdirmkdir dir1 创建一个叫做 ‘dir1’ 的目录’mkdir dir1 dir2同时创建两个目录mkdir -p /tmp/dir1/dir2创建一个目录树 2.05 删除rm和rmdir语法：rm [-option]文件名常用参数： -f：force，强制删除，不提示用户是否需要删除的信息 -r：循环删除，常用于目录删除删除包含文件的文件夹rm -f file1删除一个叫做 ‘file1’ 的文件’rmdir dir1 删除一个叫做 ‘dir1’ 的目录’rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容rm -rf dir1 dir2 同时删除两个目录及它们的内容 2.06 复制 cpcp [-option] 来源 目标-r：递归处理，将制定目录下的文件与子目cp -r被复制文件夹 目的地文件夹cp file1 file2 复制一个文件cp dir/* .复制一个目录下的所有文件到当前工作目录cp -a /tmp/dir1 .复制一个目录到当前工作目录cp -a dir1 dir2 复制一个目录 2.07 移动和重命名 mv语法：mv 源 目标mv dir1 new_dir 重命名/移动 一个目录mv mytest.txt mytest1.txt 2.08 查找 find whereis grep which locatefind- 查找文件目录路径whereis-查找命令find / -name file1从 ‘/‘ 开始进入根文件系统搜索文件和目录,文件名不多不少完全符合find /etc -name &#39;*jdk*&#39;从 ‘/‘ 开始进入根文件系统搜索包含jdk的文件名find / -user user1 搜索属于用户 ‘user1’ 的文件和目录find /home/user1 -name \*.bin在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件find /usr/bin -type f -atime +100搜索在过去100天内未被使用过的执行文件whereis halt显示一个二进制文件、源码或man的位置which halt显示一个二进制文件或可执行文件的完整路径 2.09 压缩打包 tarbunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件bzip2 file1压缩一个叫做 ‘file1’ 的文件gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件gzip file1 压缩一个叫做 ‘file1’的文件gzip -9 file1 最大程度压缩rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’rar x file1.rar 解压rar包unrar x file1.rar 解压rar包tar -cvf archive.tar file1 创建一个非压缩的 tarballtar -cvf archive.tar file1 dir1 创建一个包含了 ‘file1’及 ‘dir1’的档案文件tar -tvf archive.tar 显示一个包中的内容tar -xvf archive.tar 释放一个包tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包zip file1.zip file1 创建一个zip格式的压缩包zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包unzip file1.zip 解压一个zip格式压缩包 2.10 用户和组user和groupuseradd user1 创建一个新用户userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录)passwd user1 修改一个用户的口令 (只允许root执行)groupadd group_name 创建一个新用户组groupdel group_name 删除一个用户组 建用户 Centos 没有任何交互动作！创建用户完毕后，必须修改密码否则无法登陆useradd dev #创建用户passwd dev #修改密码passwd：所有的身份验证令牌已经成功更新。 修改etc/soduers为用户添加root权限 找到并添加## Allow root to run any commands anywhereroot ALL=(ALL) ALLwd ALL=(ALL) ALL ＃wd为你的帐户名 注意保持格式一至 （用TAB键） 常用参数： -u UID：设定新增用户的UID，如果不指定，则系统自动分配。 -g GID或者groupname：指定新增用户所在的群组。如果不指定群组，则系统将自动创建一个和用户名同名的群组，并将该用户加入该群组。 -M：不建立“属主”目录。不使用该参数则默认建立属主目录。 -m：创建“属主”目录 -s shell：指定用户登录时启用的shell。如果不指定，一般使用/bin/bash。 建工作组 groupadd test //新建test工作组新建用户同时增加工作组useradd -g test phpq //新建phpq用户并增加到test工作组注：：-g 所属组 -d 家目录 -s 所用的SHELL给已有的用户增加工作组 usermod -G groupname username或：gpasswd -a username groupname 补充:查看用户和用户组的方法 用户列表文件：/etc/passwd用户组列表文件：/etc/group查看系统中有哪些用户：cut -d : -f 1 /etc/passwd查看可以登录系统的用户：cat /etc/passwd | grep -v /sbin/nologin | cut -d : -f 1查看某一用户：w 用户名查看登录用户：who查看用户登录历史记录：last 用户UID和组GID Linux用户：Username/UID （用户的名称和用户的UID）管理员:root,0 管理员的UID是0（一般系统默认root为管理员，用户UID为0的都可以作为管理员） 普通用户：1-65535 ，普通用户分为两种： 系统用户：1-499（CentOS6）,1-999（CentOS） 登录用户：500+（CentOS6），1000+(centos7) Linux组：Groupnname/GID （组的名称和组的GID） 管理员组：root，0 管理员组的GID是0 系统组：1-499(centos6) 1-999(centos7) 普通组：500+(centos 6) 1000+(centos 7) 其他 一个普通用户可以有多个不同的组，分别称之为用户的基本组（主组）和附加组；组名与用户名相同，且仅仅包含一个用户，也叫私有组。基本组以外的组属于用户的附加组 2.11 帮助help、man、info man（manual—在线） info（详细） help（shell内）man --help ### 获取 man 的帮助info --help ### 获取 info 的帮助ls --help ### 获取 ls 的帮助2.11 授权chmod和默认权限umask r：读的权限w：写的权限x：执行的权限 （文件都没有执行权限 如.tet .txt…. ） 语法：chmod [-option] 参数 目录或文件名称选项：-R：连同目录下所有文件及子目录都进行更变Eg ：chmod 777 hello.c参数：二进制转换十进制计算UGO + - 法： 属性分为三组，分别为所有者u（user）、群组g（group）、其他o（other），另外还有一个全部 a（all）我们用 u、g、o来代表着三个组，还可以用a标识全部Eg：chmod u+w 文件名或目录Eg：chmod g-x 文件名或目录Eg：chmod o=r 文件名或目录Eg：chmod a+x 文件名或目录Umask缺省权限设置命令系统中权限掩码的设置：umask 022Eg：umask 022第一位表示粘滞位（站着位），当为1时，只能修改不能删除Eg：umsak -S 查看缺省默认权限Eg：umask 002 表示这是后新的文件其权限为755,（777-022）也就是 111 101 101 管道命令竖线 |管道是把一个命令的输出送给其他命令作为输入管道符“|”允许被多级使用，即管道的级联 eg：ps -aux | grep “bash” | grep -v “grep” 4 软件管理4.1 RPM包-(Fedora, Redhat及类似系统)—-DNF包rpm -ivh package.rpm 安装一个rpm包rpm -ivh —nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告rpm -U package.rpm 更新一个rpm包但不改变其配置文件rpm -F package.rpm 更新一个确定已经安装的rpm包rpm -e package_name.rpm 删除一个rpm包rpm -qa 显示系统中所有已经安装的rpm包rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的rpm包rpm -qi package_name 获取一个已安装包的特殊信息rpm -qg “System Environment/Daemons” 显示一个组件的rpm包rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表rpm -q package_name —whatrequires 显示与一个rpm包存在依赖关系的列表rpm -q package_name —whatprovides 显示一个rpm包所占的体积rpm -q package_name —scripts 显示在安装/删除期间所执行的脚本lrpm -q package_name —changelog 显示一个rpm包的修改历史rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表rpm —import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书rpm —checksig package.rpm 确认一个rpm包的完整性rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间rpm -Va 检查系统中所有已安装的rpm包- 小心使用rpm -Vp package.rpm 确认一个rpm包还未安装rpm2cpio package.rpm | cpio —extract —make-directories bin 从一个rpm包运行可执行文件rpm -ivh /usr/src/redhat/RPMS/arch/package.rpm 从一个rpm源码安装一个构建好的包rpmbuild —rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 4.2 YUM包-(Fedora, Redhat及类似系统)—-DNF包yum install package_name 下载并安装一个rpm包是通配符，这里代表“所有”的意思，`yum install httpd就是以httpd开头的，例如httpd-devel、httpd-tools等都会被按装。yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 yum update package_name.rpm 更新当前系统中所有安装的rpm包 yum update package_name 更新一个rpm包yum remove package_name删除一个rpm包 yum list 列出当前系统中安装的所有包yum search package_name` 在rpm仓库中搜寻软件包yum clean packages 清理rpm缓存删除下载的包yum clean headers 删除所有头文件yum clean all 删除所有缓存的包和头文件 4.3 DEB包-(Debian, Ubuntu 以及类似系统)dpkg -i package.deb 安装/更新一个 deb 包dpkg -r package_name 从系统删除一个 deb 包dpkg -l 显示系统中所有已经安装的 deb 包dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的deb包dpkg -s package_name 获得已经安装在系统中一个特殊包的信息dpkg -L package_name 显示系统中已经安装的一个deb包所提供的文件列表dpkg —contents package.deb 显示尚未安装的一个包所提供的文件列表dpkg -S /bin/ping 确认所给的文件由哪个deb包提供 4.4 APT包-(Debian, Ubuntu 以及类似系统) Advanced Packaging Toolsapt-get install package_name 安装/更新一个 deb 包apt-cdrom install package_name 从光盘安装/更新一个 deb 包apt-get update 升级列表中的软件包apt-get upgrade 升级所有已安装的软件apt-get remove package_name 从系统删除一个deb包apt-get check 确认依赖的软件仓库正确apt-get clean 从下载的软件包中清理缓存apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 5 文本文件5.1 创建编辑 vi vim nano touchnanovivimtouch vi 文件名vim 文件名yum -y install vim 5.2 查看 cat more less head tailcatmoreless 6 关机、重启、注销shutdown、reboot、logoutpoweroffshutdown命令用于关机参数：-t 数字：指定多少秒后关机-r 时间：指定时间关机后立即重新开机-h 时间：指定时间关机-c：取消正在进行的shutdowneg.shutdown –t 30 17:24 表示17:24分后延迟30秒关机。shutdown –h 20:00 表示今天20:00关机。shutdown –h now 表示现在就关机。shutdown –h +10 表示再过10分钟就关机。shutdown –r now 表示现在就重启电脑。 reboot命令用于重启电脑 7 防火墙 firewalld查看防火墙状态systemctl status firewalld.service启动防火墙systemctl start firewalld.service关闭防火墙systemctl stop firewalld.service重新启动防火墙systemctl restart firewalld.service 开放端口 添加新端口3690firewall-cmd --zone=public --add-port=3690/tcp --permanent 提交改变firewall-cmd --reload 8 服务控制 systemctl在CentOS7中chkconfig指令已经不适用，需要使用systemctl指令。以httpd为例：启动某服务：systemctl start httpd.service停止某服务：systemctl stop httpd.service重启某服务：systemctl restart httpd.service使某服务自动启动：systemctl enable httpd.service使某服务不自动启动：systemctl disable httpd.service检查所有服务自启动情况：systemctl list-unit-files 9 进程控制9.1 后台前台 &amp;，fg jobs bg &amp;加在一个命令的最后，可以把这个命令放到后台执行,如gftp &amp;, ctrl + z可以将一个正在前台执行的命令放到后台，并且处于暂停状态，不可执行ctrl + c结束当前进程 jobs查看当前有多少在后台运行的命令jobs -l选项可显示所有任务的PID，jobs的状态可以是running, stopped, Terminated,但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识；也就是说，jobs命令显示的是当前shell环境中所起的后台正在运行或者被挂起的任务信息； fg将后台中的命令调至前台继续运行如果后台中有多个命令，可以用fg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid) bg将一个在后台暂停的命令，变成继续执行 （在后台执行）如果后台中有多个命令，可以用bg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)将任务转移到后台运行：先ctrl + z；再bg，这样进程就被移到后台运行，终端还能继续接受命令。 nohup如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。 9.2 系统状态监控 ps w uptime vmstat free top 显示瞬间行程 (process) 的动态 ps ps aux ps -ef pstree ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义-A 列出所有的行程-w 显示加宽可以显示较多的资讯-au 显示较详细的资讯ps a显示现行终端机下的所有程序，包括其他用户的程序。ps -H 显示树状结构，表示程序间的相互关系。pstree 显示树状结构，表示程序间的相互关系。 ps -ef 返回系统中所有用户的所有进程 ps -ef | grep oracle ps -aux 显示所有包含其他使用者的行程 PID: pid %CPU: 占用的 CPU 使用率 %MEM: 占用的记忆体使用率 VSZ: 占用的虚拟记忆体大小 RSS: 占用的记忆体大小 TTY: 终端的次要装置号码 (minor device number of tty) STAT: 该行程的状态: w, uptime [root@linux2 ~]# w04:02:31 up 1 day, 8:25, 1 user, load average: 0.00, 0.00, 0.00USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/0 192.168.21.103 23:38 0.00s 0.47s 0.13s w system load averages ：单位时间段内活动的进程数 第一组数字：表示的是最近1分钟的平均负载，这个数字如果大于CPU的核数，那么久说明资源不够了 第二字数字：表示的是最近5分钟平均负载 第三组数字：表示的是最近15分钟的平均负载 -ab ab -n 10000 -c 100 &#39;http://www.ypl.cc/forum.php&#39; 意思就同时100个人去访问这个图片，一共持续10000次 -n：请求多少次 -c：并发多少 查看cpu的个数和核数 cat /proc/cpuinfo 查看CPU模拟线程 cat /proc/cpuinfo |grep &#39;core id&#39; uptime ：显示系统总共运行了多长时间和系统的平均负载 二、vmstat命令 vmstat：显示虚拟内存的状态，语法为vmstat （选项）（参数） vmstat 1:每1秒钟显示一次状态 vmstat 1 10：每1秒钟显示一次，执行10次自动结束 procs：进程相关的 memory：内存相关的 swap：与交换分区相关的 system：与系统相关的 io：硬盘相关的 vmstat各指标含义： r ：表示运行和等待cpu时间片的进程数，如果长期大于服务器cpu的个数，则说明cpu不够用了； b ：表示等待资源的进程数，比如等待I/O, 内存等，这列的值如果长时间大于1，则需要关注一下了 si ：由交换区进入内存的数量； so ：由内存进入交换区的数量； bi ：从块设备读取数据的量（读磁盘）； bo： 从块设备写入数据的量（写磁盘）； in : 每秒的中断次数，包含时钟中断； cs : 每秒的上下文切换次数； wa ：表示I/O等待所占用cpu时间百分比. us：cpu的百分比 top命令 用于动态监控进程所占系统资源，每隔3秒变一次。 这个命令的特点是默认把占用系统资源（CPU，内存，磁盘IO等）最高的进程放到最前面 [root@linux2 ~]# top top - 09:59:04 up 2 days, 19:55, 1 user, load average: 0.00, 0.00, 0.00 Tasks: 75 total, 1 running, 74 sleeping, 0 stopped, 0 zombie Cpu(s): 0.0%us, 0.1%sy, 0.0%ni, 99.7%id, 0.1%wa, 0.0%hi, 0.1%si, 0.0%st Mem: 1012568k total, 346700k used, 665868k free, 40664k buffers Swap: 4194300k total, 0k used, 4194300k free, 199948k cached PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 4552 root 20 0 15036 1132 868 R 1.9 0.1 0:00.02 top 1 root 20 0 19232 1508 1216 S 0.0 0.1 0:03.01 init 2 root 20 0 0 0 0 S 0.0 0.0 0:00.01 kthreadd 3 root RT 0 0 0 0 S 0.0 0.0 0:00.00 migration/0 4 root 20 0 0 0 0 S 0.0 0.0 0:01.73 ksoftirqd/0 RES：这一项为进程所占内存大小， %CPU：进程占用CPU的大小或者说是百分比 %MEM：为使用内存百分比。 在 top状态下，按 “shift + m”, 可以按照内存使用大小排序。按数字 ‘1’ 可以列出各颗cpu的使用状态。 top -bn1 ：表示非动态打印系统资源使用情况，可以用在shell脚本中 top -c ：可以显示更详细的信息 RT：实时优先级op -p PID 查看单个进程 sar命令 系统默认没有安装这个命令，需要安装 yum install -y sysstat 网卡流量 sar -n DEV 1 检查1秒钟的网卡流量状况sar -n DEV 1 10 检查1秒钟之类的流量状况，连续执行10次sar -n DEV -f /var/log/sa/sa24 查看第24天的网卡流量历史sar -q 查看历史负载sar -b查看磁盘读写 free命令 free查看系统内存使用情况 -b:用字节做单位-k:用KByte作单位(默认)-m:用MByte做单位-t:显示total（总计） mem(total):内存总数;mem(used):已经分配的内存;mem(free):未分配的内存;mem(buffers):系统分配但未被使用的buffers；mem(cached)系统分配但未被使用的cachebuffers/cache(used):实际使用的buffers与cache 总量，也是实际使用的内存；buffers/cache(free):未被使用的buffers与cache和未被分配的内存之和，当前实际可用内存 buffers是即将要被写入磁盘的，cache是被从磁盘中读出来的 killkill [-option] PID或者任务号killall -9 gedit 以进程名的方法杀死gefit记事本进程 查找出目前正在使用的svnserve进程，然后kill掉ps -aux | grep svnserve结束进程（ xxx代表svnserve对应pid）kill -9 xxx或者使用killall xxx或killall svnserve 10 网络工具net-tools ifconfig设置网卡eth0的IP地址和子掩码ifconfig eth0 192.168.1.1 netmask 255.255.255.0 ping-c 数字：用于指定测试多少次，如果不设置该参数，将会无休止的进行测试，可以用Ctrl+c强行停止。ping -c 5 www.baidu.com netstat–lnp 用于显示当前系统启用哪些端口–an 用于显示网络连接状况-t 显示TCP协议相关信息]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1 Linux概念]]></title>
    <url>%2F2017%2F06%2F10%2FLinux%2F1%20Linux%E6%A6%82%E5%BF%B5%2F</url>
    <content type="text"><![CDATA[1 Linux概念@(07 lunix基础) [toc] 1 含义、组成和分支1.1 Linux基础 Linux 英文解释为 Linux is not Unix。 定义 狭义：指Linux kernel (内核) 广义：以Linux kernel为基础的，包括OS和各种应用在内的各个Linux版本 特点| windows | unix|linux || :————: | :————:| :———: || 单用户多任务 | 多用户多任务 | 多用户多任务 | Linux组成 内核-&gt;库、函数-&gt;shell-&gt;应用程序内核：硬件驱动、文件管理库函数：系统调用，实现丰富的应用功能shell：外壳，实现人机交互，主要实现方式是运用命令行应用程序：各种应用软件 知名的发行版：Ubuntu、CentOS、RedHat、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。 摘抄 Linux 发行版：。。。。。Redhat，应该称为Redhat系列，包括RHEL(Redhat Enterprise Linux，也就是所谓的Redhat Advance Server，收费版本)、Fedora Core(由原来的Redhat桌面版本发展而来，免费版本)、CentOS(RHEL的社区克隆版本，免费)。Redhat应该说是在国内使用人群最多的Linux版本，甚至有人将Redhat等同于Linux，而有些老鸟更是只用这一个版本的Linux。所以这个版本的特点就是使用人群数量大，资料非常多，言下之意就是如果你有什么不明白的地方，很容易找到人来问，而且网上的一般Linux教程都是以Redhat为例来讲解的。Redhat系列的包管理方式采用的是基于RPM包的YUM包管理方式，包分发方式是编译好的二进制文件。稳定性方面RHEL和CentOS的稳定性非常好，适合于服务器使用，但是Fedora Core的稳定性较差，最好只用于桌面应用。 Debian，或者称Debian系列，包括Debian和Ubuntu等。Debian是社区类Linux的典范，是迄今为止最遵循GNU规范的Linux系统。Debian最早由Ian Murdock于1993年创建，分为三个版本分支（branch）： stable, testing 和 unstable。其中，unstable为最新的测试版本，其中包括最新的软件包，但是也有相对较多的bug，适合桌面用户。testing的版本都经 过unstable中的测试，相对较为稳定，也支持了不少新技术（比如SMP等）。而stable一般只用于服务器，上面的软件包大部分都比较过时，但是 稳定和安全性都非常的高。Debian最具特色的是apt-get / dpkg包管理方式，其实Redhat的YUM也是在模仿Debian的APT方式，但在二进制文件发行方式中，APT应该是最好的了。Debian的资 料也很丰富，有很多支持的社区，有问题求教也有地方可去:)。。。。。 1.2 操作系统 处理器管理：为了让CPU有条不紊地工作。 存储器管理：使用户合理地使用内存。 设备管理：保证用户方便的使用各种设备； 文件管理：文件的共享、保护、存取 用户接口 命令接口：用户通过交互命令方式直接或间接地对计算机进行操作。 程序接口：也称为应用程序编程接口(Application Programming Interface，API)，用户通过API可以调用系统提供的例行程序，实现既定的操作。 进程（程序、数据、进程控制块）进程是执行起来的程序，是系统进行资源调度和分配的一个独立单位。进程由1至50个线程组成，进程更健壮 任何时刻，任何进程都处于以下三种基本状态之一。 就绪状态 进程已经获得除CPU之外的其他资源，只要再获得CPU，就立即执行的状态。 执行状态 进程获得了需要的所有资源正在处理机上执行的状态。 阻塞状态 也称为等待状态。阻塞状态是指正在执行的进程由于发生某事件而暂时无法继续执行的状态。 2 部署和管理2.1 安装—虚拟化VirtualBox—vdi 增强工具（仿冒驱动） 依赖包yum install -y bzip2 gcc gcc-devel gcc-c++ gcc-c++-devel make kernel-dyum install perl gcc* make kernel kernel-devel -y内核升级rpm -qa | grep kernel | sortyum -y upgrade kernel kernel-devel 减小VDI文件体积 虚拟机中，下载sdelete工具放到C盘根目录，shift右键打开终端，执行 sdelete –c C: 物理机中，在virtualbox根目录下打开终端，执行VBoxManage.exe modifyvdi &quot;文件路径/名称.vdi&quot; --compact vdi、vmdk和vhd互相转换 VBoxManage.exe clonehd &quot;路径/源文件.vmdk&quot; &quot;路径/目标文件.vdi&quot; --format vdi VMWare—vmdk Hyper-V—vhd 2.2 FTP服务工具—SecureFX、WinSCP 2.3 SSH服务工具—SecureCRT、XshellLinux一般作为服务器使用，而服务器一般放在机房，你不可能在机房操作你的Linux服务器。这时我们就需要远程登录到Linux服务器来管理维护系统。Linux系统中是通过ssh服务实现的远程登录功能，默认ssh服务端口号为 22。Window系统上 Linux 远程登录客户端有SecureCRT, Putty, SSH Secure Shell等. ssh服务安装centosyum install openssh-server Ubuntuapt-get install openssh-server terminal终端 root表示当前使用的用户名@符号后的字符表示当前系统的名字~表示当前用户的属主目录#表示当前用户是系统管理员$表示当前用户是普通用户 3 Linux的文件系统 系统自带目录/root系统管理员（root 用户）的“属主”目录/home存放普通用户“属主”目录的目录/etc用于保存系统数据文件、启动文件和脚本等/bin存放普通用户常用的命令/boot存放系统核心文件/usr用于存放用户安装的应用程序，类似于 windows 中的 program files 目录/dev存放与设备有关的文件/lib存放用于编译某些程序时要用的函数库/var用于存放系统数据文件/sbin存放系统管理常用命令/media用于系统自动挂载存储设备时（例如光驱、U 盘）使用的目录/mnt用于挂载设备时建议使用的目录，由于目前版本的 linux 都使用自动挂载 根目录和家目录 根目录 / ——————-是系统的一级文件结构 家目录 ~ ——————-是系统傻瓜安装程序人为挂载的一个目录，便于多用户登录使用]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
